[{"C:\\Users\\Todd\\Desktop\\TWhite 2020 Desktop\\Active Projects\\Professional\\CS Bootcamp Project\\Thinkful Bootcamp\\module-52\\starter-restaurant-reservation\\front-end\\src\\index.js":"1","C:\\Users\\Todd\\Desktop\\TWhite 2020 Desktop\\Active Projects\\Professional\\CS Bootcamp Project\\Thinkful Bootcamp\\module-52\\starter-restaurant-reservation\\front-end\\src\\App.js":"2","C:\\Users\\Todd\\Desktop\\TWhite 2020 Desktop\\Active Projects\\Professional\\CS Bootcamp Project\\Thinkful Bootcamp\\module-52\\starter-restaurant-reservation\\front-end\\src\\layout\\Layout.js":"3","C:\\Users\\Todd\\Desktop\\TWhite 2020 Desktop\\Active Projects\\Professional\\CS Bootcamp Project\\Thinkful Bootcamp\\module-52\\starter-restaurant-reservation\\front-end\\src\\layout\\Menu.js":"4","C:\\Users\\Todd\\Desktop\\TWhite 2020 Desktop\\Active Projects\\Professional\\CS Bootcamp Project\\Thinkful Bootcamp\\module-52\\starter-restaurant-reservation\\front-end\\src\\layout\\Routes.js":"5","C:\\Users\\Todd\\Desktop\\TWhite 2020 Desktop\\Active Projects\\Professional\\CS Bootcamp Project\\Thinkful Bootcamp\\module-52\\starter-restaurant-reservation\\front-end\\src\\layout\\NotFound.js":"6","C:\\Users\\Todd\\Desktop\\TWhite 2020 Desktop\\Active Projects\\Professional\\CS Bootcamp Project\\Thinkful Bootcamp\\module-52\\starter-restaurant-reservation\\front-end\\src\\dashboard\\Dashboard.js":"7","C:\\Users\\Todd\\Desktop\\TWhite 2020 Desktop\\Active Projects\\Professional\\CS Bootcamp Project\\Thinkful Bootcamp\\module-52\\starter-restaurant-reservation\\front-end\\src\\utils\\date-time.js":"8","C:\\Users\\Todd\\Desktop\\TWhite 2020 Desktop\\Active Projects\\Professional\\CS Bootcamp Project\\Thinkful Bootcamp\\module-52\\starter-restaurant-reservation\\front-end\\src\\utils\\api.js":"9","C:\\Users\\Todd\\Desktop\\TWhite 2020 Desktop\\Active Projects\\Professional\\CS Bootcamp Project\\Thinkful Bootcamp\\module-52\\starter-restaurant-reservation\\front-end\\src\\layout\\ErrorAlert.js":"10","C:\\Users\\Todd\\Desktop\\TWhite 2020 Desktop\\Active Projects\\Professional\\CS Bootcamp Project\\Thinkful Bootcamp\\module-52\\starter-restaurant-reservation\\front-end\\src\\utils\\format-reservation-date.js":"11","C:\\Users\\Todd\\Desktop\\TWhite 2020 Desktop\\Active Projects\\Professional\\CS Bootcamp Project\\Thinkful Bootcamp\\module-52\\starter-restaurant-reservation\\front-end\\src\\reservations\\Reservations.js":"12","C:\\Users\\Todd\\Desktop\\TWhite 2020 Desktop\\Active Projects\\Professional\\CS Bootcamp Project\\Thinkful Bootcamp\\module-52\\starter-restaurant-reservation\\front-end\\src\\reservations\\Seat.js":"13","C:\\Users\\Todd\\Desktop\\TWhite 2020 Desktop\\Active Projects\\Professional\\CS Bootcamp Project\\Thinkful Bootcamp\\module-52\\starter-restaurant-reservation\\front-end\\src\\reservations\\AddTable.js":"14","C:\\Users\\Todd\\Desktop\\TWhite 2020 Desktop\\Active Projects\\Professional\\CS Bootcamp Project\\Thinkful Bootcamp\\module-52\\starter-restaurant-reservation\\front-end\\src\\reservations\\NewReservation.js":"15","C:\\Users\\Todd\\Desktop\\TWhite 2020 Desktop\\Active Projects\\Professional\\CS Bootcamp Project\\Thinkful Bootcamp\\module-52\\starter-restaurant-reservation\\front-end\\src\\reservations\\EditReservation.js":"16","C:\\Users\\Todd\\Desktop\\TWhite 2020 Desktop\\Active Projects\\Professional\\CS Bootcamp Project\\Thinkful Bootcamp\\module-52\\starter-restaurant-reservation\\front-end\\src\\reservations\\Search.js":"17","C:\\Users\\Todd\\Desktop\\TWhite 2020 Desktop\\Active Projects\\Professional\\CS Bootcamp Project\\Thinkful Bootcamp\\module-52\\starter-restaurant-reservation\\front-end\\src\\reservations\\SearchResults.js":"18","C:\\Users\\Todd\\Desktop\\TWhite 2020 Desktop\\Active Projects\\Professional\\CS Bootcamp Project\\Thinkful Bootcamp\\module-52\\starter-restaurant-reservation\\front-end\\src\\dashboard\\SeatButton.js":"19","C:\\Users\\Todd\\Desktop\\TWhite 2020 Desktop\\Active Projects\\Professional\\CS Bootcamp Project\\Thinkful Bootcamp\\module-52\\starter-restaurant-reservation\\front-end\\src\\dashboard\\FinishButton.js":"20","C:\\Users\\Todd\\Desktop\\TWhite 2020 Desktop\\Active Projects\\Professional\\CS Bootcamp Project\\Thinkful Bootcamp\\module-52\\starter-restaurant-reservation\\front-end\\src\\dashboard\\CancelButton.js":"21","C:\\Users\\Todd\\Desktop\\TWhite 2020 Desktop\\Active Projects\\Professional\\CS Bootcamp Project\\Thinkful Bootcamp\\module-52\\starter-restaurant-reservation\\front-end\\src\\reservations\\PastDateError.js":"22","C:\\Users\\Todd\\Desktop\\TWhite 2020 Desktop\\Active Projects\\Professional\\CS Bootcamp Project\\Thinkful Bootcamp\\module-52\\starter-restaurant-reservation\\front-end\\src\\reservations\\TuesdayError.js":"23","C:\\Users\\Todd\\Desktop\\TWhite 2020 Desktop\\Active Projects\\Professional\\CS Bootcamp Project\\Thinkful Bootcamp\\module-52\\starter-restaurant-reservation\\front-end\\src\\reservations\\OccupiedError.js":"24","C:\\Users\\Todd\\Desktop\\TWhite 2020 Desktop\\Active Projects\\Professional\\CS Bootcamp Project\\Thinkful Bootcamp\\module-52\\starter-restaurant-reservation\\front-end\\src\\reservations\\CapacityError.js":"25"},{"size":299,"mtime":1632929090351,"results":"26","hashOfConfig":"27"},{"size":352,"mtime":1632929090348,"results":"28","hashOfConfig":"27"},{"size":579,"mtime":1632929090353,"results":"29","hashOfConfig":"27"},{"size":1879,"mtime":1632929090354,"results":"30","hashOfConfig":"27"},{"size":1878,"mtime":1637426666050,"results":"31","hashOfConfig":"27"},{"size":345,"mtime":1632929090355,"results":"32","hashOfConfig":"27"},{"size":5598,"mtime":1637601070589,"results":"33","hashOfConfig":"27"},{"size":2468,"mtime":1632929090358,"results":"34","hashOfConfig":"27"},{"size":4229,"mtime":1637699349193,"results":"35","hashOfConfig":"27"},{"size":505,"mtime":1632929090352,"results":"36","hashOfConfig":"27"},{"size":647,"mtime":1632929090358,"results":"37","hashOfConfig":"27"},{"size":3380,"mtime":1634328747899,"results":"38","hashOfConfig":"27"},{"size":4573,"mtime":1637707684654,"results":"39","hashOfConfig":"27"},{"size":2378,"mtime":1637426504588,"results":"40","hashOfConfig":"27"},{"size":5866,"mtime":1637618364347,"results":"41","hashOfConfig":"27"},{"size":6330,"mtime":1637426513271,"results":"42","hashOfConfig":"27"},{"size":2046,"mtime":1637272724948,"results":"43","hashOfConfig":"27"},{"size":1548,"mtime":1637272702852,"results":"44","hashOfConfig":"27"},{"size":533,"mtime":1637417693421,"results":"45","hashOfConfig":"27"},{"size":571,"mtime":1637600889906,"results":"46","hashOfConfig":"27"},{"size":840,"mtime":1637601597949,"results":"47","hashOfConfig":"27"},{"size":342,"mtime":1637617552913,"results":"48","hashOfConfig":"27"},{"size":337,"mtime":1637618303230,"results":"49","hashOfConfig":"27"},{"size":330,"mtime":1637687192464,"results":"50","hashOfConfig":"27"},{"size":355,"mtime":1637686635941,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"bj93m2",{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"54"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"54"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"54"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"54"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"54"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"54"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"54"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"54"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"54"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"54"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"54"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"54"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"54"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"54"},"C:\\Users\\Todd\\Desktop\\TWhite 2020 Desktop\\Active Projects\\Professional\\CS Bootcamp Project\\Thinkful Bootcamp\\module-52\\starter-restaurant-reservation\\front-end\\src\\index.js",[],["117","118"],"C:\\Users\\Todd\\Desktop\\TWhite 2020 Desktop\\Active Projects\\Professional\\CS Bootcamp Project\\Thinkful Bootcamp\\module-52\\starter-restaurant-reservation\\front-end\\src\\App.js",[],"C:\\Users\\Todd\\Desktop\\TWhite 2020 Desktop\\Active Projects\\Professional\\CS Bootcamp Project\\Thinkful Bootcamp\\module-52\\starter-restaurant-reservation\\front-end\\src\\layout\\Layout.js",[],"C:\\Users\\Todd\\Desktop\\TWhite 2020 Desktop\\Active Projects\\Professional\\CS Bootcamp Project\\Thinkful Bootcamp\\module-52\\starter-restaurant-reservation\\front-end\\src\\layout\\Menu.js",[],"C:\\Users\\Todd\\Desktop\\TWhite 2020 Desktop\\Active Projects\\Professional\\CS Bootcamp Project\\Thinkful Bootcamp\\module-52\\starter-restaurant-reservation\\front-end\\src\\layout\\Routes.js",[],"C:\\Users\\Todd\\Desktop\\TWhite 2020 Desktop\\Active Projects\\Professional\\CS Bootcamp Project\\Thinkful Bootcamp\\module-52\\starter-restaurant-reservation\\front-end\\src\\layout\\NotFound.js",[],"C:\\Users\\Todd\\Desktop\\TWhite 2020 Desktop\\Active Projects\\Professional\\CS Bootcamp Project\\Thinkful Bootcamp\\module-52\\starter-restaurant-reservation\\front-end\\src\\dashboard\\Dashboard.js",["119","120","121"],"import React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { listReservations, updateReservation, updateTable } from \"../utils/api\";\r\nimport { listTables } from \"../utils/api\";\r\nimport SeatButton from \"./SeatButton\";\r\nimport FinishButton from \"./FinishButton\";\r\nimport CancelButton from \"./CancelButton\";\r\nimport ErrorAlert from \"../layout/ErrorAlert\";\r\n\r\n/**\r\n * Defines the dashboard page.\r\n * @param date\r\n *  the date for which the user wants to view reservations.\r\n * @returns {JSX.Element}\r\n */\r\nfunction Dashboard({ date }) {\r\n  console.log(\"reprint date\", date);\r\n\r\n  const [reservations, setReservations] = useState([]);\r\n  const [reservationsError, setReservationsError] = useState(null);\r\n  const [tables, setTables] = useState([]);\r\n  const [tablesError, setTablesError] = useState(null);\r\n\r\n  useEffect(loadDashboard, [date]);\r\n\r\n  function loadDashboard() {\r\n    const abortController = new AbortController();\r\n    setReservationsError(null);\r\n    const reservation_date = date;\r\n    listReservations({ reservation_date }, abortController.signal)\r\n      .then(setReservations)\r\n      .catch(setReservationsError);\r\n    return () => abortController.abort();\r\n  }\r\n\r\n  useEffect(loadTables, [date]);\r\n\r\n  function loadTables() {\r\n    const abortController = new AbortController();\r\n    setTablesError(null);\r\n    listTables(abortController.signal).then(setTables).catch(setTablesError);\r\n    return () => abortController.abort();\r\n  }\r\n\r\n  //Create the handleSubmit function to update the deck\r\n  //This function creates a deck based on the user input and then uses updateDeck() api call\r\n  function handleFinish(reservationId, tableId) {\r\n    console.log(\"reservationId\", reservationId);\r\n    let reservation = {\r\n      data: {},\r\n    };\r\n\r\n    reservation.data.reservation_id = reservationId;\r\n    reservation.data.status = \"finished\";\r\n    console.log(\"reservation\", reservation);\r\n\r\n    async function changeReservation(reservation) {\r\n      const response = await updateReservation(reservation);\r\n      console.log(\"response\", response);\r\n    }\r\n    changeReservation(reservation);\r\n\r\n    let table = {\r\n      data: {},\r\n    };\r\n\r\n    table.data.table_id = tableId;\r\n    table.data.reservation_id = null;\r\n    console.log(\"table\", table);\r\n\r\n    async function changeTable(table) {\r\n      const response = await updateTable(table);\r\n      console.log(response);\r\n    }\r\n    changeTable(table);\r\n\r\n    document.location.href = \"/dashboard\";\r\n  }\r\n\r\n  function handleCancel(reservationId) {\r\n    console.log(\"reservationId\", reservationId);\r\n    let reservation = {\r\n      data: {},\r\n    };\r\n\r\n    reservation.data.reservation_id = reservationId;\r\n    reservation.data.status = \"cancelled\";\r\n    console.log(\"reservation\", reservation);\r\n\r\n    async function changeReservation(reservation) {\r\n      const response = await updateReservation(reservation);\r\n      console.log(\"response\", response);\r\n    }\r\n    changeReservation(reservation);\r\n\r\n    document.location.href = \"/dashboard\";\r\n  }\r\n\r\n  const reservationLinks = reservations.map((reservation) => {\r\n    let visible = reservation.status === \"booked\" ? true : null;\r\n    let visible2 = reservation.status !== \"cancelled\" ? true : null;\r\n\r\n    return (\r\n      <tr>\r\n        <td>{reservation.reservation_id}</td>\r\n        <td>{reservation.first_name}</td>\r\n        <td>{reservation.last_name}</td>\r\n        <td>{reservation.mobile_number}</td>\r\n        <td>{reservation.reservation_date}</td>\r\n        <td>{reservation.reservation_time}</td>\r\n        <td>{reservation.people}</td>\r\n        <td data-reservation-id-status={reservation.reservation_id}>\r\n          {reservation.status}\r\n        </td>\r\n        <td>\r\n          <Link to={`/reservations/${reservation.reservation_id}/edit`}>\r\n            <button type=\"button\" class=\"btn btn-outline-primary\">\r\n              Edit\r\n            </button>\r\n          </Link>{\" \"}\r\n        </td>\r\n        <td>\r\n          <CancelButton\r\n            visibility={visible2}\r\n            handleCancel={handleCancel}\r\n            reservationId={reservation.reservation_id}\r\n          />\r\n        </td>\r\n        <SeatButton\r\n          visibility={visible}\r\n          reservationId={reservation.reservation_id}\r\n        />\r\n      </tr>\r\n    );\r\n  });\r\n\r\n  const tableLinks = tables.map((table) => {\r\n    let visible = table.reservation_id ? true : null;\r\n\r\n    return (\r\n      <tr>\r\n        <td>{table.table_name}</td>\r\n        <td>{table.capacity}</td>\r\n        <td>{table.reservation_id}</td>\r\n        <td data-table-id-status={table.table_id}>\r\n          {table.reservation_id === null ? \"Free\" : \"Occupied\"}\r\n        </td>\r\n        <FinishButton\r\n          visibility={visible}\r\n          handleFinish={handleFinish}\r\n          reservationId={table.reservation_id}\r\n          tableId={table.table_id}\r\n        />\r\n      </tr>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <main>\r\n      <h1>Reservations</h1>\r\n      <table>\r\n        <tr>\r\n          <th>Reservation ID</th>\r\n          <th>First Name</th>\r\n          <th>Last Name</th>\r\n          <th>Mobile Number</th>\r\n          <th>Reservation Date</th>\r\n          <th>Reservation Time</th>\r\n          <th>People</th>\r\n          <th>Status</th>\r\n        </tr>\r\n\r\n        {reservationLinks}\r\n      </table>\r\n      <br />\r\n      <h1>Tables for Seating</h1>\r\n      <table>\r\n        <tr>\r\n          <th>Table Name</th>\r\n          <th>Capacity</th>\r\n          <th>Reservation ID</th>\r\n          <th>Status</th>\r\n        </tr>\r\n        {tableLinks}\r\n      </table>\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default Dashboard;\r\n","C:\\Users\\Todd\\Desktop\\TWhite 2020 Desktop\\Active Projects\\Professional\\CS Bootcamp Project\\Thinkful Bootcamp\\module-52\\starter-restaurant-reservation\\front-end\\src\\utils\\date-time.js",[],"C:\\Users\\Todd\\Desktop\\TWhite 2020 Desktop\\Active Projects\\Professional\\CS Bootcamp Project\\Thinkful Bootcamp\\module-52\\starter-restaurant-reservation\\front-end\\src\\utils\\api.js",[],"C:\\Users\\Todd\\Desktop\\TWhite 2020 Desktop\\Active Projects\\Professional\\CS Bootcamp Project\\Thinkful Bootcamp\\module-52\\starter-restaurant-reservation\\front-end\\src\\layout\\ErrorAlert.js",[],"C:\\Users\\Todd\\Desktop\\TWhite 2020 Desktop\\Active Projects\\Professional\\CS Bootcamp Project\\Thinkful Bootcamp\\module-52\\starter-restaurant-reservation\\front-end\\src\\utils\\format-reservation-date.js",[],"C:\\Users\\Todd\\Desktop\\TWhite 2020 Desktop\\Active Projects\\Professional\\CS Bootcamp Project\\Thinkful Bootcamp\\module-52\\starter-restaurant-reservation\\front-end\\src\\reservations\\Reservations.js",["122","123"],"import React, { useEffect, useState } from \"react\";\r\nimport { listReservations } from \"../utils/api\";\r\nimport ErrorAlert from \"../layout/ErrorAlert\";\r\n\r\n/**\r\n * Defines the dashboard page.\r\n * @param date\r\n *  the date for which the user wants to view reservations.\r\n * @returns {JSX.Element}\r\n */\r\nfunction Reservations({ date }) {\r\n  const [reservations, setReservations] = useState([]);\r\n  const [reservationsError, setReservationsError] = useState(null);\r\n\r\n  useEffect(loadDashboard, [date]);\r\n\r\n  function loadDashboard() {\r\n    const abortController = new AbortController();\r\n    setReservationsError(null);\r\n    listReservations({ date }, abortController.signal)\r\n      .then(setReservations)\r\n      .catch(setReservationsError);\r\n    return () => abortController.abort();\r\n  }\r\n\r\n  const reservationLinks = reservations.map((reservation) => (\r\n    <li key={reservation.reservation_id}>\r\n      <div className=\"card\">\r\n        <div className=\"card-body\">\r\n          <h5 className=\"card-title\">{reservation.reservation_id}</h5>\r\n          <p className=\"card-text\">\r\n            <table>\r\n              <tr>\r\n                <td>{reservation.first_name}</td>\r\n                <td>{reservation.last_name}</td>\r\n              </tr>\r\n            </table>\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </li>\r\n  ));\r\n\r\n  return (\r\n    <main>\r\n      <h1>Reservations</h1>\r\n      <form>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"first_name\">First Name</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"first_name\"\r\n            className=\"form-control\"\r\n            id=\"first_name\"\r\n            aria-describedby=\"emailHelp\"\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"last_name\">Last Name</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"last_name\"\r\n            className=\"form-control\"\r\n            id=\"last_name\"\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"mobile_number\">Mobile Number</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"mobile_number\"\r\n            className=\"form-control\"\r\n            id=\"mobile_number\"\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"reservation_date\">Date of Reservation</label>\r\n          <input\r\n            type=\"date\"\r\n            name=\"reservation_date\"\r\n            className=\"form-control\"\r\n            id=\"reservation_date\"\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"reservation_time\">Time of Reservation</label>\r\n          <input\r\n            type=\"time\"\r\n            name=\"reservation_time\"\r\n            className=\"form-control\"\r\n            id=\"reservation_time\"\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"people\">People</label>\r\n          <input\r\n            type=\"number\"\r\n            name=\"people\"\r\n            className=\"form-control\"\r\n            id=\"people\"\r\n          />\r\n        </div>\r\n        <button type=\"submit\" className=\"btn btn-primary\">\r\n          Submit\r\n        </button>\r\n        <button type=\"cancel\" className=\"btn btn-primary\">\r\n          Cancel\r\n        </button>\r\n      </form>\r\n      <ul>{reservationLinks}</ul>\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default Reservations;\r\n","C:\\Users\\Todd\\Desktop\\TWhite 2020 Desktop\\Active Projects\\Professional\\CS Bootcamp Project\\Thinkful Bootcamp\\module-52\\starter-restaurant-reservation\\front-end\\src\\reservations\\Seat.js",["124","125","126"],"C:\\Users\\Todd\\Desktop\\TWhite 2020 Desktop\\Active Projects\\Professional\\CS Bootcamp Project\\Thinkful Bootcamp\\module-52\\starter-restaurant-reservation\\front-end\\src\\reservations\\AddTable.js",["127","128","129"],"import React, { useEffect, useState } from \"react\";\r\nimport { createTable } from \"../utils/api\";\r\nimport ErrorAlert from \"../layout/ErrorAlert\";\r\n\r\n/**\r\n * Defines the dashboard page.\r\n * @param date\r\n *  the date for which the user wants to view reservations.\r\n * @returns {JSX.Element}\r\n */\r\nfunction AddTable({ date }) {\r\n  //Create name and description state variables and add event listeners\r\n  const [tableName, setTableName] = useState(\"\");\r\n  const handleTableNameChange = (event) => setTableName(event.target.value);\r\n\r\n  const [capacity, setCapacity] = useState(\"\");\r\n  const handleCapacityChange = (event) => setCapacity(event.target.value);\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    let table = {\r\n      data: {},\r\n    };\r\n\r\n    table.data.table_name = tableName;\r\n    table.data.capacity = capacity;\r\n\r\n    console.log(\"submit table\", table);\r\n\r\n    async function newTable(table) {\r\n      const response = await createTable(table);\r\n    }\r\n    newTable(table);\r\n\r\n    document.location.href = \"/tables/new\";\r\n  };\r\n\r\n  //Create the handleCancel function to cancel and return to the homepage1\r\n  const handleCancel = (event) => {\r\n    console.log(\"we here\");\r\n    event.preventDefault();\r\n    document.location.href = \"/dashboard\";\r\n  };\r\n\r\n  return (\r\n    <main>\r\n      <h1>Add a Table</h1>\r\n      <form onSubmit={handleSubmit}>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"table_name\">Table Name</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"table_name\"\r\n            className=\"form-control\"\r\n            id=\"table_name\"\r\n            onChange={handleTableNameChange}\r\n            value={tableName}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"capacity\">Capacity</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"capacity\"\r\n            className=\"form-control\"\r\n            id=\"capacity\"\r\n            onChange={handleCapacityChange}\r\n            value={capacity}\r\n          />\r\n        </div>\r\n        <button type=\"submit\" className=\"btn btn-primary\">\r\n          Submit\r\n        </button>\r\n        <button\r\n          type=\"cancel\"\r\n          className=\"btn btn-primary\"\r\n          onClick={handleCancel}\r\n        >\r\n          Cancel\r\n        </button>\r\n      </form>\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default AddTable;\r\n","C:\\Users\\Todd\\Desktop\\TWhite 2020 Desktop\\Active Projects\\Professional\\CS Bootcamp Project\\Thinkful Bootcamp\\module-52\\starter-restaurant-reservation\\front-end\\src\\reservations\\NewReservation.js",["130","131","132","133"],"import React, { useEffect, useState } from \"react\";\r\nimport { createReservation } from \"../utils/api\";\r\nimport { listReservations } from \"../utils/api\";\r\nimport ErrorAlert from \"../layout/ErrorAlert\";\r\nimport { today } from \"../utils/date-time\";\r\nimport PastDateError from \"./PastDateError\";\r\nimport TuesdayError from \"./TuesdayError\";\r\n\r\n/**\r\n * Defines the dashboard page.\r\n * @param date\r\n *  the date for which the user wants to view reservations.\r\n * @returns {JSX.Element}\r\n */\r\nfunction NewReservation({ date }) {\r\n  //Create name and description state variables and add event listeners\r\n  const [firstName, setFirstName] = useState(\"\");\r\n  const handleFirstNameChange = (event) => setFirstName(event.target.value);\r\n\r\n  const [lastName, setLastName] = useState(\"\");\r\n  const handleLastNameChange = (event) => setLastName(event.target.value);\r\n\r\n  const [mobileNumber, setMobileNumber] = useState(\"\");\r\n  const handleMobileNumberChange = (event) =>\r\n    setMobileNumber(event.target.value);\r\n\r\n  const [reservationDate, setReservationDate] = useState(\"\");\r\n  const handleReservationDateChange = (event) =>\r\n    setReservationDate(event.target.value);\r\n\r\n  const [reservationTime, setReservationTime] = useState(\"\");\r\n  const handleReservationTimeChange = (event) =>\r\n    setReservationTime(event.target.value);\r\n\r\n  const [people, setPeople] = useState(\"\");\r\n  const handlePeopleChange = (event) => setPeople(event.target.value);\r\n\r\n  const [visibility, setVisibility] = useState(null);\r\n  const [visibility2, setVisibility2] = useState(null);\r\n\r\n  //Create the handleSubmit function which creates a reservation based on the input and\r\n  //makes an api call to add that reservation to the database\r\n  const handleSubmit = (event) => {\r\n    validate();\r\n\r\n    event.preventDefault();\r\n    let reservation = {\r\n      data: {},\r\n    };\r\n\r\n    reservation.data.first_name = firstName;\r\n    reservation.data.last_name = lastName;\r\n    reservation.data.mobile_number = mobileNumber;\r\n    reservation.data.reservation_date = reservationDate;\r\n    reservation.data.reservation_time = reservationTime;\r\n    reservation.data.people = people;\r\n    console.log(\"submit reservation\", reservation);\r\n\r\n    async function newReservation(reservation) {\r\n      const response = await createReservation(reservation);\r\n    }\r\n    newReservation(reservation);\r\n\r\n    //document.location.href = \"/reservations/new\";\r\n  };\r\n\r\n  const validate = () => {\r\n    //Reset visibility\r\n    setVisibility(null);\r\n    setVisibility2(null);\r\n\r\n    //Create date for reservation date\r\n    let month = Number(reservationDate.substring(5, 7)) - 1;\r\n    let day = Number(reservationDate.substring(8, 10));\r\n    let year = Number(reservationDate.substring(0, 4));\r\n    let resDate = new Date(year, month, day);\r\n\r\n    if (reservationDate < today()) {\r\n      setVisibility(true);\r\n    }\r\n\r\n    if (resDate.getDay() === 2) {\r\n      setVisibility2(true);\r\n    }\r\n  };\r\n\r\n  //Create the handleCancel function to cancel and return to the homepage1\r\n  const handleCancel = (event) => {\r\n    console.log(\"we here\");\r\n    event.preventDefault();\r\n    document.location.href = \"/dashboard\";\r\n  };\r\n\r\n  return (\r\n    <main>\r\n      <h1>Add a New Reservation</h1>\r\n      <form onSubmit={handleSubmit}>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"first_name\">First Name</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"first_name\"\r\n            className=\"form-control\"\r\n            id=\"first_name\"\r\n            aria-describedby=\"emailHelp\"\r\n            onChange={handleFirstNameChange}\r\n            value={firstName}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"last_name\">Last Name</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"last_name\"\r\n            className=\"form-control\"\r\n            id=\"last_name\"\r\n            onChange={handleLastNameChange}\r\n            value={lastName}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"mobile_number\">Mobile Number</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"mobile_number\"\r\n            className=\"form-control\"\r\n            id=\"mobile_number\"\r\n            onChange={handleMobileNumberChange}\r\n            value={mobileNumber}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"reservation_date\">Date of Reservation</label>\r\n          <input\r\n            type=\"date\"\r\n            name=\"reservation_date\"\r\n            className=\"form-control\"\r\n            id=\"reservation_date\"\r\n            onChange={handleReservationDateChange}\r\n            value={reservationDate}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"reservation_time\">Time of Reservation</label>\r\n          <input\r\n            type=\"time\"\r\n            name=\"reservation_time\"\r\n            className=\"form-control\"\r\n            id=\"reservation_time\"\r\n            onChange={handleReservationTimeChange}\r\n            value={reservationTime}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"people\">People</label>\r\n          <input\r\n            type=\"number\"\r\n            name=\"people\"\r\n            className=\"form-control\"\r\n            id=\"people\"\r\n            onChange={handlePeopleChange}\r\n            value={people}\r\n          />\r\n        </div>\r\n        <button type=\"submit\" className=\"btn btn-primary\">\r\n          Submit\r\n        </button>\r\n        <button\r\n          type=\"cancel\"\r\n          className=\"btn btn-primary\"\r\n          onClick={handleCancel}\r\n        >\r\n          Cancel\r\n        </button>\r\n      </form>\r\n      <PastDateError visibility={visibility} />\r\n      <TuesdayError visibility2={visibility2} />\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default NewReservation;\r\n","C:\\Users\\Todd\\Desktop\\TWhite 2020 Desktop\\Active Projects\\Professional\\CS Bootcamp Project\\Thinkful Bootcamp\\module-52\\starter-restaurant-reservation\\front-end\\src\\reservations\\EditReservation.js",["134","135"],"import React, { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport {\r\n  listReservations,\r\n  readReservation,\r\n  updateReservation,\r\n} from \"../utils/api\";\r\nimport ErrorAlert from \"../layout/ErrorAlert\";\r\n\r\n/**\r\n * Defines the dashboard page.\r\n * @param date\r\n *  the date for which the user wants to view reservations.\r\n * @returns {JSX.Element}\r\n */\r\nfunction EditReservation({ date }) {\r\n  //Create name and description state variables and add event listeners\r\n  const [firstName, setFirstName] = useState(\"\");\r\n  const handleFirstNameChange = (event) => setFirstName(event.target.value);\r\n\r\n  const [lastName, setLastName] = useState(\"\");\r\n  const handleLastNameChange = (event) => setLastName(event.target.value);\r\n\r\n  const [mobileNumber, setMobileNumber] = useState(\"\");\r\n  const handleMobileNumberChange = (event) =>\r\n    setMobileNumber(event.target.value);\r\n\r\n  const [reservationDate, setReservationDate] = useState(\"\");\r\n  const handleReservationDateChange = (event) =>\r\n    setReservationDate(event.target.value);\r\n\r\n  const [reservationTime, setReservationTime] = useState(\"\");\r\n  const handleReservationTimeChange = (event) =>\r\n    setReservationTime(event.target.value);\r\n\r\n  const [people, setPeople] = useState(\"\");\r\n  const handlePeopleChange = (event) => setPeople(event.target.value);\r\n\r\n  const [status, setStatus] = useState(\"\");\r\n  const handleStatusChange = (event) => setStatus(event.target.value);\r\n\r\n  //Get ReservationId from url\r\n  const { reservationId } = useParams();\r\n\r\n  //Make an API Call to get the reservation based on the deckID\r\n  useEffect(() => {\r\n    async function getReservation(reservationId) {\r\n      const response = await readReservation(reservationId);\r\n      setFirstName(response.first_name);\r\n      setLastName(response.last_name);\r\n      setMobileNumber(response.mobile_number);\r\n      setReservationDate(response.reservation_date);\r\n      setReservationTime(response.reservation_time);\r\n      setPeople(response.people);\r\n      setStatus(response.status);\r\n    }\r\n    getReservation(reservationId);\r\n  }, [reservationId]);\r\n\r\n  //Create the handleSubmit function to update the deck\r\n  //This function creates a deck based on the user input and then uses updateDeck() api call\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    let reservation = {\r\n      data: {},\r\n    };\r\n\r\n    reservation.data.reservation_id = reservationId;\r\n    reservation.data.first_name = firstName;\r\n    reservation.data.last_name = lastName;\r\n    reservation.data.mobile_number = mobileNumber;\r\n    reservation.data.reservation_date = reservationDate;\r\n    reservation.data.reservation_time = reservationTime;\r\n    reservation.data.people = people;\r\n    reservation.data.status = status;\r\n    console.log(\"submit reservation\", reservation);\r\n\r\n    async function changeReservation(reservation) {\r\n      const response = await updateReservation(reservation);\r\n      console.log(response);\r\n    }\r\n    changeReservation(reservation);\r\n\r\n    setFirstName(\"\");\r\n    setLastName(\"\");\r\n    setMobileNumber(\"\");\r\n    setReservationDate(\"\");\r\n    setReservationTime(\"\");\r\n    setPeople(\"\");\r\n    setStatus(\"\");\r\n\r\n    //document.location.href = \"/\";\r\n  };\r\n\r\n  //Create the handleCancel function to return the user to the deck page\r\n  const handleCancel = (event) => {\r\n    document.location.href = `/dashboard`;\r\n  };\r\n\r\n  return (\r\n    <main>\r\n      <h1>Edit Reservation</h1>\r\n      <form onSubmit={handleSubmit}>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"first_name\">First Name</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"first_name\"\r\n            className=\"form-control\"\r\n            id=\"first_name\"\r\n            aria-describedby=\"emailHelp\"\r\n            onChange={handleFirstNameChange}\r\n            value={firstName}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"last_name\">Last Name</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"last_name\"\r\n            className=\"form-control\"\r\n            id=\"last_name\"\r\n            onChange={handleLastNameChange}\r\n            value={lastName}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"mobile_number\">Mobile Number</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"mobile_number\"\r\n            className=\"form-control\"\r\n            id=\"mobile_number\"\r\n            onChange={handleMobileNumberChange}\r\n            value={mobileNumber}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"reservation_date\">Date of Reservation</label>\r\n          <input\r\n            type=\"date\"\r\n            name=\"reservation_date\"\r\n            className=\"form-control\"\r\n            id=\"reservation_date\"\r\n            onChange={handleReservationDateChange}\r\n            value={reservationDate}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"reservation_time\">Time of Reservation</label>\r\n          <input\r\n            type=\"time\"\r\n            name=\"reservation_time\"\r\n            className=\"form-control\"\r\n            id=\"reservation_time\"\r\n            onChange={handleReservationTimeChange}\r\n            value={reservationTime}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"people\">People</label>\r\n          <input\r\n            type=\"number\"\r\n            name=\"people\"\r\n            className=\"form-control\"\r\n            id=\"people\"\r\n            onChange={handlePeopleChange}\r\n            value={people}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"status\">Status</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"status\"\r\n            className=\"form-control\"\r\n            id=\"status\"\r\n            onChange={handleStatusChange}\r\n            value={status}\r\n          />\r\n        </div>\r\n        <button type=\"submit\" className=\"btn btn-primary\">\r\n          Submit\r\n        </button>\r\n        <button\r\n          type=\"cancel\"\r\n          className=\"btn btn-primary\"\r\n          onClick={handleCancel}\r\n        >\r\n          Cancel\r\n        </button>\r\n      </form>\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default EditReservation;\r\n","C:\\Users\\Todd\\Desktop\\TWhite 2020 Desktop\\Active Projects\\Professional\\CS Bootcamp Project\\Thinkful Bootcamp\\module-52\\starter-restaurant-reservation\\front-end\\src\\reservations\\Search.js",["136","137","138","139"],"import React, { useEffect, useState } from \"react\";\r\nimport SearchResults from \"./SearchResults\";\r\nimport { createTable } from \"../utils/api\";\r\nimport ErrorAlert from \"../layout/ErrorAlert\";\r\n\r\n/**\r\n * Defines the dashboard page.\r\n * @param date\r\n *  the date for which the user wants to view reservations.\r\n * @returns {JSX.Element}\r\n */\r\nfunction Search({ date }) {\r\n  //Create name and description state variables and add event listeners\r\n  const [phoneNumber, setPhoneNumber] = useState(\"\");\r\n  const handlePhoneNumberChange = (event) => setPhoneNumber(event.target.value);\r\n\r\n  const [visibilityStatus, setVisibilityStatus] = useState(null);\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    setVisibilityStatus(true);\r\n    console.log(\"phoneNumber\", phoneNumber);\r\n    /*let table = {\r\n      data: {},\r\n    };\r\n\r\n    table.data.table_name = tableName;\r\n    table.data.capacity = capacity;\r\n\r\n    console.log(\"submit table\", table);\r\n\r\n    async function newTable(table) {\r\n      const response = await createTable(table);\r\n    }\r\n    newTable(table);\r\n    */\r\n  };\r\n\r\n  //Create the handleCancel function to cancel and return to the homepage1\r\n  const handleCancel = (event) => {\r\n    console.log(\"we here\");\r\n    event.preventDefault();\r\n  };\r\n\r\n  return (\r\n    <main>\r\n      <h1>Find Reservations</h1>\r\n      <form onSubmit={handleSubmit}>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"phone_number\">Enter a Customer Phone Number</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"phone_number\"\r\n            className=\"form-control\"\r\n            id=\"phone_number\"\r\n            onChange={handlePhoneNumberChange}\r\n            value={phoneNumber}\r\n          />\r\n        </div>\r\n\r\n        <button type=\"submit\" className=\"btn btn-primary\">\r\n          Find\r\n        </button>\r\n      </form>\r\n      <div>\r\n        <SearchResults\r\n          visibility={visibilityStatus}\r\n          phoneNumber={phoneNumber}\r\n        />\r\n      </div>\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default Search;\r\n","C:\\Users\\Todd\\Desktop\\TWhite 2020 Desktop\\Active Projects\\Professional\\CS Bootcamp Project\\Thinkful Bootcamp\\module-52\\starter-restaurant-reservation\\front-end\\src\\reservations\\SearchResults.js",["140"],"import React, { useEffect, useState } from \"react\";\r\n\r\nimport { listReservations } from \"../utils/api\";\r\n\r\nfunction SearchResults({ visibility, phoneNumber }) {\r\n  useEffect(loadDashboard, [phoneNumber]);\r\n  const [reservations, setReservations] = useState([]);\r\n  const [reservationsError, setReservationsError] = useState(null);\r\n\r\n  function loadDashboard() {\r\n    const abortController = new AbortController();\r\n    setReservationsError(null);\r\n    const mobile_number = phoneNumber;\r\n    console.log(\"mobile_number before api\", mobile_number);\r\n    listReservations({ mobile_number }, abortController.signal)\r\n      .then(setReservations)\r\n      .catch(setReservationsError);\r\n    return () => abortController.abort();\r\n  }\r\n\r\n  const reservationLinks = reservations.map((reservation) => (\r\n    <tr>\r\n      <td>{reservation.first_name}</td>\r\n      <td>{reservation.last_name}</td>\r\n      <td>{reservation.mobile_number}</td>\r\n      <td>{reservation.reservation_date}</td>\r\n      <td>{reservation.reservation_time}</td>\r\n      <td>{reservation.people}</td>\r\n    </tr>\r\n  ));\r\n\r\n  if (visibility !== null) {\r\n    return (\r\n      <div>\r\n        <h1>Reservations Found for {phoneNumber}</h1>\r\n        <table>\r\n          <th>First Name</th>\r\n          <th>Last Name</th>\r\n          <th>Mobile Number</th>\r\n          <th>Reservation Date</th>\r\n          <th>Reservation Time</th>\r\n          <th>People</th>\r\n          {reservationLinks}\r\n        </table>\r\n      </div>\r\n    );\r\n  } else {\r\n    return null;\r\n  }\r\n}\r\n\r\nexport default SearchResults;\r\n","C:\\Users\\Todd\\Desktop\\TWhite 2020 Desktop\\Active Projects\\Professional\\CS Bootcamp Project\\Thinkful Bootcamp\\module-52\\starter-restaurant-reservation\\front-end\\src\\dashboard\\SeatButton.js",["141","142"],"import React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction SeatButton({ visibility, reservationId }) {\r\n  console.log(\"value of visibility\", visibility);\r\n  if (visibility !== null) {\r\n    return (\r\n      <td>\r\n        <Link to={`/reservations/${reservationId}/seat`}>\r\n          <button type=\"button\" class=\"btn btn-outline-primary\">\r\n            Seat\r\n          </button>\r\n        </Link>{\" \"}\r\n      </td>\r\n    );\r\n  } else {\r\n    return null;\r\n  }\r\n}\r\n\r\nexport default SeatButton;\r\n","C:\\Users\\Todd\\Desktop\\TWhite 2020 Desktop\\Active Projects\\Professional\\CS Bootcamp Project\\Thinkful Bootcamp\\module-52\\starter-restaurant-reservation\\front-end\\src\\dashboard\\FinishButton.js",["143","144"],"import React, { useEffect, useState } from \"react\";\r\n\r\nfunction FinishButton({ visibility, handleFinish, reservationId, tableId }) {\r\n  console.log(\"value of visibility\", visibility);\r\n  if (visibility !== null) {\r\n    return (\r\n      <td>\r\n        <button\r\n          type=\"button\"\r\n          class=\"btn btn-outline-primary\"\r\n          onClick={() => handleFinish(reservationId, tableId)}\r\n          data-table-id-finish={tableId}\r\n        >\r\n          Finish\r\n        </button>\r\n      </td>\r\n    );\r\n  } else {\r\n    return null;\r\n  }\r\n}\r\n\r\nexport default FinishButton;\r\n","C:\\Users\\Todd\\Desktop\\TWhite 2020 Desktop\\Active Projects\\Professional\\CS Bootcamp Project\\Thinkful Bootcamp\\module-52\\starter-restaurant-reservation\\front-end\\src\\dashboard\\CancelButton.js",["145","146"],"import React, { useEffect, useState } from \"react\";\r\n\r\nfunction CancelButton({ visibility, handleCancel, reservationId }) {\r\n  const sendAlert = (event) => {\r\n    event.preventDefault();\r\n\r\n    if (\r\n      window.confirm(\r\n        \"Do you want to cancel this reservation? This cannot be undone.\"\r\n      )\r\n    ) {\r\n      handleCancel(reservationId);\r\n    } else {\r\n      document.location.href = \"/dashboard\";\r\n    }\r\n  };\r\n  console.log(\"value of visibility\", visibility);\r\n  if (visibility !== null) {\r\n    return (\r\n      <td>\r\n        <button\r\n          type=\"button\"\r\n          class=\"btn btn-outline-primary\"\r\n          onClick={sendAlert}\r\n          data-reservation-id-cancel={reservationId}\r\n        >\r\n          Cancel\r\n        </button>\r\n      </td>\r\n    );\r\n  } else {\r\n    return null;\r\n  }\r\n}\r\n\r\nexport default CancelButton;\r\n","C:\\Users\\Todd\\Desktop\\TWhite 2020 Desktop\\Active Projects\\Professional\\CS Bootcamp Project\\Thinkful Bootcamp\\module-52\\starter-restaurant-reservation\\front-end\\src\\reservations\\PastDateError.js",["147","148"],"import React, { useEffect, useState } from \"react\";\r\n\r\nfunction PastDateError({ visibility }) {\r\n  if (visibility !== null) {\r\n    return (\r\n      <div class=\"alert alert-danger\" role=\"alert\">\r\n        The reservation date must not be a past date!\r\n      </div>\r\n    );\r\n  } else {\r\n    return null;\r\n  }\r\n}\r\n\r\nexport default PastDateError;\r\n","C:\\Users\\Todd\\Desktop\\TWhite 2020 Desktop\\Active Projects\\Professional\\CS Bootcamp Project\\Thinkful Bootcamp\\module-52\\starter-restaurant-reservation\\front-end\\src\\reservations\\TuesdayError.js",["149","150"],"import React, { useEffect, useState } from \"react\";\r\n\r\nfunction TuesdayError({ visibility2 }) {\r\n  if (visibility2 !== null) {\r\n    return (\r\n      <div class=\"alert alert-danger\" role=\"alert\">\r\n        Reservations cannot be made on Tuesdays!\r\n      </div>\r\n    );\r\n  } else {\r\n    return null;\r\n  }\r\n}\r\n\r\nexport default TuesdayError;\r\n","C:\\Users\\Todd\\Desktop\\TWhite 2020 Desktop\\Active Projects\\Professional\\CS Bootcamp Project\\Thinkful Bootcamp\\module-52\\starter-restaurant-reservation\\front-end\\src\\reservations\\OccupiedError.js",["151","152"],"import React, { useEffect, useState } from \"react\";\r\n\r\nfunction OccupiedError({ visibility2 }) {\r\n  if (visibility2 !== null) {\r\n    return (\r\n      <div class=\"alert alert-danger\" role=\"alert\">\r\n        The table selected is occupied.\r\n      </div>\r\n    );\r\n  } else {\r\n    return null;\r\n  }\r\n}\r\n\r\nexport default OccupiedError;\r\n","C:\\Users\\Todd\\Desktop\\TWhite 2020 Desktop\\Active Projects\\Professional\\CS Bootcamp Project\\Thinkful Bootcamp\\module-52\\starter-restaurant-reservation\\front-end\\src\\reservations\\CapacityError.js",["153","154"],"import React, { useEffect, useState } from \"react\";\r\n\r\nfunction CapacityError({ visibility }) {\r\n  if (visibility !== null) {\r\n    return (\r\n      <div class=\"alert alert-danger\" role=\"alert\">\r\n        The table must have sufficient capacity to seat the party.\r\n      </div>\r\n    );\r\n  } else {\r\n    return null;\r\n  }\r\n}\r\n\r\nexport default CapacityError;\r\n",{"ruleId":"155","replacedBy":"156"},{"ruleId":"157","replacedBy":"158"},{"ruleId":"159","severity":1,"message":"160","line":8,"column":8,"nodeType":"161","messageId":"162","endLine":8,"endColumn":18},{"ruleId":"159","severity":1,"message":"163","line":20,"column":10,"nodeType":"161","messageId":"162","endLine":20,"endColumn":27},{"ruleId":"159","severity":1,"message":"164","line":22,"column":10,"nodeType":"161","messageId":"162","endLine":22,"endColumn":21},{"ruleId":"159","severity":1,"message":"160","line":3,"column":8,"nodeType":"161","messageId":"162","endLine":3,"endColumn":18},{"ruleId":"159","severity":1,"message":"163","line":13,"column":10,"nodeType":"161","messageId":"162","endLine":13,"endColumn":27},{"ruleId":"159","severity":1,"message":"160","line":10,"column":8,"nodeType":"161","messageId":"162","endLine":10,"endColumn":18},{"ruleId":"159","severity":1,"message":"164","line":22,"column":10,"nodeType":"161","messageId":"162","endLine":22,"endColumn":21},{"ruleId":"165","severity":1,"message":"166","line":43,"column":25,"nodeType":"167","endLine":43,"endColumn":31,"suggestions":"168"},{"ruleId":"159","severity":1,"message":"169","line":1,"column":17,"nodeType":"161","messageId":"162","endLine":1,"endColumn":26},{"ruleId":"159","severity":1,"message":"160","line":3,"column":8,"nodeType":"161","messageId":"162","endLine":3,"endColumn":18},{"ruleId":"159","severity":1,"message":"170","line":31,"column":13,"nodeType":"161","messageId":"162","endLine":31,"endColumn":21},{"ruleId":"159","severity":1,"message":"169","line":1,"column":17,"nodeType":"161","messageId":"162","endLine":1,"endColumn":26},{"ruleId":"159","severity":1,"message":"171","line":3,"column":10,"nodeType":"161","messageId":"162","endLine":3,"endColumn":26},{"ruleId":"159","severity":1,"message":"160","line":4,"column":8,"nodeType":"161","messageId":"162","endLine":4,"endColumn":18},{"ruleId":"159","severity":1,"message":"170","line":60,"column":13,"nodeType":"161","messageId":"162","endLine":60,"endColumn":21},{"ruleId":"159","severity":1,"message":"171","line":4,"column":3,"nodeType":"161","messageId":"162","endLine":4,"endColumn":19},{"ruleId":"159","severity":1,"message":"160","line":8,"column":8,"nodeType":"161","messageId":"162","endLine":8,"endColumn":18},{"ruleId":"159","severity":1,"message":"169","line":1,"column":17,"nodeType":"161","messageId":"162","endLine":1,"endColumn":26},{"ruleId":"159","severity":1,"message":"172","line":3,"column":10,"nodeType":"161","messageId":"162","endLine":3,"endColumn":21},{"ruleId":"159","severity":1,"message":"160","line":4,"column":8,"nodeType":"161","messageId":"162","endLine":4,"endColumn":18},{"ruleId":"159","severity":1,"message":"173","line":40,"column":9,"nodeType":"161","messageId":"162","endLine":40,"endColumn":21},{"ruleId":"159","severity":1,"message":"163","line":8,"column":10,"nodeType":"161","messageId":"162","endLine":8,"endColumn":27},{"ruleId":"159","severity":1,"message":"169","line":1,"column":17,"nodeType":"161","messageId":"162","endLine":1,"endColumn":26},{"ruleId":"159","severity":1,"message":"174","line":1,"column":28,"nodeType":"161","messageId":"162","endLine":1,"endColumn":36},{"ruleId":"159","severity":1,"message":"169","line":1,"column":17,"nodeType":"161","messageId":"162","endLine":1,"endColumn":26},{"ruleId":"159","severity":1,"message":"174","line":1,"column":28,"nodeType":"161","messageId":"162","endLine":1,"endColumn":36},{"ruleId":"159","severity":1,"message":"169","line":1,"column":17,"nodeType":"161","messageId":"162","endLine":1,"endColumn":26},{"ruleId":"159","severity":1,"message":"174","line":1,"column":28,"nodeType":"161","messageId":"162","endLine":1,"endColumn":36},{"ruleId":"159","severity":1,"message":"169","line":1,"column":17,"nodeType":"161","messageId":"162","endLine":1,"endColumn":26},{"ruleId":"159","severity":1,"message":"174","line":1,"column":28,"nodeType":"161","messageId":"162","endLine":1,"endColumn":36},{"ruleId":"159","severity":1,"message":"169","line":1,"column":17,"nodeType":"161","messageId":"162","endLine":1,"endColumn":26},{"ruleId":"159","severity":1,"message":"174","line":1,"column":28,"nodeType":"161","messageId":"162","endLine":1,"endColumn":36},{"ruleId":"159","severity":1,"message":"169","line":1,"column":17,"nodeType":"161","messageId":"162","endLine":1,"endColumn":26},{"ruleId":"159","severity":1,"message":"174","line":1,"column":28,"nodeType":"161","messageId":"162","endLine":1,"endColumn":36},{"ruleId":"159","severity":1,"message":"169","line":1,"column":17,"nodeType":"161","messageId":"162","endLine":1,"endColumn":26},{"ruleId":"159","severity":1,"message":"174","line":1,"column":28,"nodeType":"161","messageId":"162","endLine":1,"endColumn":36},"no-native-reassign",["175"],"no-negated-in-lhs",["176"],"no-unused-vars","'ErrorAlert' is defined but never used.","Identifier","unusedVar","'reservationsError' is assigned a value but never used.","'tablesError' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'loadPeople'. Either include it or remove the dependency array.","ArrayExpression",["177"],"'useEffect' is defined but never used.","'response' is assigned a value but never used.","'listReservations' is defined but never used.","'createTable' is defined but never used.","'handleCancel' is assigned a value but never used.","'useState' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"178","fix":"179"},"Update the dependencies array to be: [date, loadPeople]",{"range":"180","text":"181"},[1304,1310],"[date, loadPeople]"]