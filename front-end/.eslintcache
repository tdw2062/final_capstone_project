[{"C:\\Users\\Todd\\Desktop\\TWhite 2020 Desktop\\Active Projects\\Professional\\CS Bootcamp Project\\Thinkful Bootcamp\\module-52\\starter-restaurant-reservation\\front-end\\src\\index.js":"1","C:\\Users\\Todd\\Desktop\\TWhite 2020 Desktop\\Active Projects\\Professional\\CS Bootcamp Project\\Thinkful Bootcamp\\module-52\\starter-restaurant-reservation\\front-end\\src\\App.js":"2","C:\\Users\\Todd\\Desktop\\TWhite 2020 Desktop\\Active Projects\\Professional\\CS Bootcamp Project\\Thinkful Bootcamp\\module-52\\starter-restaurant-reservation\\front-end\\src\\layout\\Layout.js":"3","C:\\Users\\Todd\\Desktop\\TWhite 2020 Desktop\\Active Projects\\Professional\\CS Bootcamp Project\\Thinkful Bootcamp\\module-52\\starter-restaurant-reservation\\front-end\\src\\layout\\Menu.js":"4","C:\\Users\\Todd\\Desktop\\TWhite 2020 Desktop\\Active Projects\\Professional\\CS Bootcamp Project\\Thinkful Bootcamp\\module-52\\starter-restaurant-reservation\\front-end\\src\\layout\\Routes.js":"5","C:\\Users\\Todd\\Desktop\\TWhite 2020 Desktop\\Active Projects\\Professional\\CS Bootcamp Project\\Thinkful Bootcamp\\module-52\\starter-restaurant-reservation\\front-end\\src\\layout\\NotFound.js":"6","C:\\Users\\Todd\\Desktop\\TWhite 2020 Desktop\\Active Projects\\Professional\\CS Bootcamp Project\\Thinkful Bootcamp\\module-52\\starter-restaurant-reservation\\front-end\\src\\dashboard\\Dashboard.js":"7","C:\\Users\\Todd\\Desktop\\TWhite 2020 Desktop\\Active Projects\\Professional\\CS Bootcamp Project\\Thinkful Bootcamp\\module-52\\starter-restaurant-reservation\\front-end\\src\\utils\\date-time.js":"8","C:\\Users\\Todd\\Desktop\\TWhite 2020 Desktop\\Active Projects\\Professional\\CS Bootcamp Project\\Thinkful Bootcamp\\module-52\\starter-restaurant-reservation\\front-end\\src\\utils\\api.js":"9","C:\\Users\\Todd\\Desktop\\TWhite 2020 Desktop\\Active Projects\\Professional\\CS Bootcamp Project\\Thinkful Bootcamp\\module-52\\starter-restaurant-reservation\\front-end\\src\\layout\\ErrorAlert.js":"10","C:\\Users\\Todd\\Desktop\\TWhite 2020 Desktop\\Active Projects\\Professional\\CS Bootcamp Project\\Thinkful Bootcamp\\module-52\\starter-restaurant-reservation\\front-end\\src\\utils\\format-reservation-date.js":"11","C:\\Users\\Todd\\Desktop\\TWhite 2020 Desktop\\Active Projects\\Professional\\CS Bootcamp Project\\Thinkful Bootcamp\\module-52\\starter-restaurant-reservation\\front-end\\src\\reservations\\Reservations.js":"12","C:\\Users\\Todd\\Desktop\\TWhite 2020 Desktop\\Active Projects\\Professional\\CS Bootcamp Project\\Thinkful Bootcamp\\module-52\\starter-restaurant-reservation\\front-end\\src\\reservations\\Seat.js":"13","C:\\Users\\Todd\\Desktop\\TWhite 2020 Desktop\\Active Projects\\Professional\\CS Bootcamp Project\\Thinkful Bootcamp\\module-52\\starter-restaurant-reservation\\front-end\\src\\reservations\\AddTable.js":"14","C:\\Users\\Todd\\Desktop\\TWhite 2020 Desktop\\Active Projects\\Professional\\CS Bootcamp Project\\Thinkful Bootcamp\\module-52\\starter-restaurant-reservation\\front-end\\src\\reservations\\NewReservation.js":"15","C:\\Users\\Todd\\Desktop\\TWhite 2020 Desktop\\Active Projects\\Professional\\CS Bootcamp Project\\Thinkful Bootcamp\\module-52\\starter-restaurant-reservation\\front-end\\src\\reservations\\EditReservation.js":"16","C:\\Users\\Todd\\Desktop\\TWhite 2020 Desktop\\Active Projects\\Professional\\CS Bootcamp Project\\Thinkful Bootcamp\\module-52\\starter-restaurant-reservation\\front-end\\src\\reservations\\Search.js":"17","C:\\Users\\Todd\\Desktop\\TWhite 2020 Desktop\\Active Projects\\Professional\\CS Bootcamp Project\\Thinkful Bootcamp\\module-52\\starter-restaurant-reservation\\front-end\\src\\reservations\\SearchResults.js":"18","C:\\Users\\Todd\\Desktop\\TWhite 2020 Desktop\\Active Projects\\Professional\\CS Bootcamp Project\\Thinkful Bootcamp\\module-52\\starter-restaurant-reservation\\front-end\\src\\dashboard\\SeatButton.js":"19","C:\\Users\\Todd\\Desktop\\TWhite 2020 Desktop\\Active Projects\\Professional\\CS Bootcamp Project\\Thinkful Bootcamp\\module-52\\starter-restaurant-reservation\\front-end\\src\\dashboard\\FinishButton.js":"20","C:\\Users\\Todd\\Desktop\\TWhite 2020 Desktop\\Active Projects\\Professional\\CS Bootcamp Project\\Thinkful Bootcamp\\module-52\\starter-restaurant-reservation\\front-end\\src\\dashboard\\CancelButton.js":"21","C:\\Users\\Todd\\Desktop\\TWhite 2020 Desktop\\Active Projects\\Professional\\CS Bootcamp Project\\Thinkful Bootcamp\\module-52\\starter-restaurant-reservation\\front-end\\src\\reservations\\PastDateError.js":"22","C:\\Users\\Todd\\Desktop\\TWhite 2020 Desktop\\Active Projects\\Professional\\CS Bootcamp Project\\Thinkful Bootcamp\\module-52\\starter-restaurant-reservation\\front-end\\src\\reservations\\TuesdayError.js":"23","C:\\Users\\Todd\\Desktop\\TWhite 2020 Desktop\\Active Projects\\Professional\\CS Bootcamp Project\\Thinkful Bootcamp\\module-52\\starter-restaurant-reservation\\front-end\\src\\reservations\\OccupiedError.js":"24","C:\\Users\\Todd\\Desktop\\TWhite 2020 Desktop\\Active Projects\\Professional\\CS Bootcamp Project\\Thinkful Bootcamp\\module-52\\starter-restaurant-reservation\\front-end\\src\\reservations\\CapacityError.js":"25","C:\\Users\\Todd\\Desktop\\TWhite 2020 Desktop\\Active Projects\\Professional\\CS Bootcamp Project\\Thinkful Bootcamp\\module-52\\starter-restaurant-reservation\\front-end\\src\\reservations\\TimeError.js":"26","C:\\Users\\Todd\\Desktop\\TWhite 2020 Desktop\\Active Projects\\Professional\\CS Bootcamp Project\\Thinkful Bootcamp\\module-52\\starter-restaurant-reservation\\front-end\\src\\reservations\\StatusError.js":"27"},{"size":299,"mtime":1632929090351,"results":"28","hashOfConfig":"29"},{"size":352,"mtime":1632929090348,"results":"30","hashOfConfig":"29"},{"size":579,"mtime":1632929090353,"results":"31","hashOfConfig":"29"},{"size":1879,"mtime":1632929090354,"results":"32","hashOfConfig":"29"},{"size":1878,"mtime":1637426666050,"results":"33","hashOfConfig":"29"},{"size":345,"mtime":1632929090355,"results":"34","hashOfConfig":"29"},{"size":9253,"mtime":1638812545061,"results":"35","hashOfConfig":"29"},{"size":2468,"mtime":1632929090358,"results":"36","hashOfConfig":"29"},{"size":5305,"mtime":1638544091133,"results":"37","hashOfConfig":"29"},{"size":505,"mtime":1632929090352,"results":"38","hashOfConfig":"29"},{"size":647,"mtime":1632929090358,"results":"39","hashOfConfig":"29"},{"size":3380,"mtime":1634328747899,"results":"40","hashOfConfig":"29"},{"size":5104,"mtime":1638627041681,"results":"41","hashOfConfig":"29"},{"size":2687,"mtime":1638810243420,"results":"42","hashOfConfig":"29"},{"size":7130,"mtime":1638620903310,"results":"43","hashOfConfig":"29"},{"size":6889,"mtime":1638702969247,"results":"44","hashOfConfig":"29"},{"size":1880,"mtime":1638701205855,"results":"45","hashOfConfig":"29"},{"size":2216,"mtime":1638210155331,"results":"46","hashOfConfig":"29"},{"size":699,"mtime":1638198328500,"results":"47","hashOfConfig":"29"},{"size":1035,"mtime":1638637422789,"results":"48","hashOfConfig":"29"},{"size":1104,"mtime":1638198262566,"results":"49","hashOfConfig":"29"},{"size":526,"mtime":1638209132438,"results":"50","hashOfConfig":"29"},{"size":516,"mtime":1638209567140,"results":"51","hashOfConfig":"29"},{"size":497,"mtime":1638209060503,"results":"52","hashOfConfig":"29"},{"size":468,"mtime":1638200432198,"results":"53","hashOfConfig":"29"},{"size":536,"mtime":1638209370428,"results":"54","hashOfConfig":"29"},{"size":569,"mtime":1638209323339,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"bj93m2",{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"69","messages":"70","errorCount":1,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"58"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"58"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"58"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"58"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"58"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"58"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"58"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"58"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"58"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"58"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"58"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"58"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"58"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"58"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"58"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"58"},"C:\\Users\\Todd\\Desktop\\TWhite 2020 Desktop\\Active Projects\\Professional\\CS Bootcamp Project\\Thinkful Bootcamp\\module-52\\starter-restaurant-reservation\\front-end\\src\\index.js",[],["127","128"],"C:\\Users\\Todd\\Desktop\\TWhite 2020 Desktop\\Active Projects\\Professional\\CS Bootcamp Project\\Thinkful Bootcamp\\module-52\\starter-restaurant-reservation\\front-end\\src\\App.js",[],"C:\\Users\\Todd\\Desktop\\TWhite 2020 Desktop\\Active Projects\\Professional\\CS Bootcamp Project\\Thinkful Bootcamp\\module-52\\starter-restaurant-reservation\\front-end\\src\\layout\\Layout.js",[],"C:\\Users\\Todd\\Desktop\\TWhite 2020 Desktop\\Active Projects\\Professional\\CS Bootcamp Project\\Thinkful Bootcamp\\module-52\\starter-restaurant-reservation\\front-end\\src\\layout\\Menu.js",[],"C:\\Users\\Todd\\Desktop\\TWhite 2020 Desktop\\Active Projects\\Professional\\CS Bootcamp Project\\Thinkful Bootcamp\\module-52\\starter-restaurant-reservation\\front-end\\src\\layout\\Routes.js",[],"C:\\Users\\Todd\\Desktop\\TWhite 2020 Desktop\\Active Projects\\Professional\\CS Bootcamp Project\\Thinkful Bootcamp\\module-52\\starter-restaurant-reservation\\front-end\\src\\layout\\NotFound.js",[],"C:\\Users\\Todd\\Desktop\\TWhite 2020 Desktop\\Active Projects\\Professional\\CS Bootcamp Project\\Thinkful Bootcamp\\module-52\\starter-restaurant-reservation\\front-end\\src\\dashboard\\Dashboard.js",["129","130","131","132","133","134","135"],"C:\\Users\\Todd\\Desktop\\TWhite 2020 Desktop\\Active Projects\\Professional\\CS Bootcamp Project\\Thinkful Bootcamp\\module-52\\starter-restaurant-reservation\\front-end\\src\\utils\\date-time.js",[],"C:\\Users\\Todd\\Desktop\\TWhite 2020 Desktop\\Active Projects\\Professional\\CS Bootcamp Project\\Thinkful Bootcamp\\module-52\\starter-restaurant-reservation\\front-end\\src\\utils\\api.js",[],"C:\\Users\\Todd\\Desktop\\TWhite 2020 Desktop\\Active Projects\\Professional\\CS Bootcamp Project\\Thinkful Bootcamp\\module-52\\starter-restaurant-reservation\\front-end\\src\\layout\\ErrorAlert.js",[],"C:\\Users\\Todd\\Desktop\\TWhite 2020 Desktop\\Active Projects\\Professional\\CS Bootcamp Project\\Thinkful Bootcamp\\module-52\\starter-restaurant-reservation\\front-end\\src\\utils\\format-reservation-date.js",[],"C:\\Users\\Todd\\Desktop\\TWhite 2020 Desktop\\Active Projects\\Professional\\CS Bootcamp Project\\Thinkful Bootcamp\\module-52\\starter-restaurant-reservation\\front-end\\src\\reservations\\Reservations.js",["136","137"],"import React, { useEffect, useState } from \"react\";\r\nimport { listReservations } from \"../utils/api\";\r\nimport ErrorAlert from \"../layout/ErrorAlert\";\r\n\r\n/**\r\n * Defines the dashboard page.\r\n * @param date\r\n *  the date for which the user wants to view reservations.\r\n * @returns {JSX.Element}\r\n */\r\nfunction Reservations({ date }) {\r\n  const [reservations, setReservations] = useState([]);\r\n  const [reservationsError, setReservationsError] = useState(null);\r\n\r\n  useEffect(loadDashboard, [date]);\r\n\r\n  function loadDashboard() {\r\n    const abortController = new AbortController();\r\n    setReservationsError(null);\r\n    listReservations({ date }, abortController.signal)\r\n      .then(setReservations)\r\n      .catch(setReservationsError);\r\n    return () => abortController.abort();\r\n  }\r\n\r\n  const reservationLinks = reservations.map((reservation) => (\r\n    <li key={reservation.reservation_id}>\r\n      <div className=\"card\">\r\n        <div className=\"card-body\">\r\n          <h5 className=\"card-title\">{reservation.reservation_id}</h5>\r\n          <p className=\"card-text\">\r\n            <table>\r\n              <tr>\r\n                <td>{reservation.first_name}</td>\r\n                <td>{reservation.last_name}</td>\r\n              </tr>\r\n            </table>\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </li>\r\n  ));\r\n\r\n  return (\r\n    <main>\r\n      <h1>Reservations</h1>\r\n      <form>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"first_name\">First Name</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"first_name\"\r\n            className=\"form-control\"\r\n            id=\"first_name\"\r\n            aria-describedby=\"emailHelp\"\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"last_name\">Last Name</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"last_name\"\r\n            className=\"form-control\"\r\n            id=\"last_name\"\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"mobile_number\">Mobile Number</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"mobile_number\"\r\n            className=\"form-control\"\r\n            id=\"mobile_number\"\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"reservation_date\">Date of Reservation</label>\r\n          <input\r\n            type=\"date\"\r\n            name=\"reservation_date\"\r\n            className=\"form-control\"\r\n            id=\"reservation_date\"\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"reservation_time\">Time of Reservation</label>\r\n          <input\r\n            type=\"time\"\r\n            name=\"reservation_time\"\r\n            className=\"form-control\"\r\n            id=\"reservation_time\"\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"people\">People</label>\r\n          <input\r\n            type=\"number\"\r\n            name=\"people\"\r\n            className=\"form-control\"\r\n            id=\"people\"\r\n          />\r\n        </div>\r\n        <button type=\"submit\" className=\"btn btn-primary\">\r\n          Submit\r\n        </button>\r\n        <button type=\"cancel\" className=\"btn btn-primary\">\r\n          Cancel\r\n        </button>\r\n      </form>\r\n      <ul>{reservationLinks}</ul>\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default Reservations;\r\n","C:\\Users\\Todd\\Desktop\\TWhite 2020 Desktop\\Active Projects\\Professional\\CS Bootcamp Project\\Thinkful Bootcamp\\module-52\\starter-restaurant-reservation\\front-end\\src\\reservations\\Seat.js",["138","139","140","141"],"//The Seat Component is used to assign a reservation to a table\r\n\r\nimport React, { useEffect, useState } from \"react\";\r\nimport {\r\n  listTables,\r\n  updateReservationWithTableId,\r\n  updateTable,\r\n  readReservation,\r\n  readTable,\r\n} from \"../utils/api\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport ErrorAlert from \"../layout/ErrorAlert\";\r\nimport CapacityError from \"./CapacityError\";\r\nimport OccupiedError from \"./OccupiedError\";\r\n\r\n/**\r\n * Defines the dashboard page.\r\n * @param date\r\n *  the date for which the user wants to view reservations.\r\n * @returns {JSX.Element}\r\n */\r\nfunction Seat({ date }) {\r\n  //Create state variables\r\n  const [tables, setTables] = useState([]);\r\n  const [tablesError, setTablesError] = useState(null);\r\n  const [tableId, setTableId] = useState(\"\");\r\n  const [visibility, setVisibility] = useState(null);\r\n  const [visibility2, setVisibility2] = useState(null);\r\n  const [capacity, setCapacity] = useState(null);\r\n  const [people, setPeople] = useState(null);\r\n  const [occupied, setOccupied] = useState(null);\r\n\r\n  //The handleTableIdChange function is called whenever the value for the table drop-down is changed\r\n  //This function sets the table_id, capacity, and occupied status of the table\r\n  function handleTableIdChange(event) {\r\n    setTableId(event.target.value);\r\n\r\n    async function getTable(table_id) {\r\n      const response = await readTable(table_id);\r\n      setCapacity(response.capacity);\r\n      setOccupied(response.reservation_id);\r\n      console.log(\"tableCapacity\", capacity);\r\n    }\r\n    getTable(event.target.value);\r\n  }\r\n\r\n  //Get ReservationId from url\r\n  const { reservationId } = useParams();\r\n\r\n  //Use useEffect to load the tables\r\n  useEffect(loadTables, [date]);\r\n\r\n  function loadTables() {\r\n    const abortController = new AbortController();\r\n    setTablesError(null);\r\n    listTables(abortController.signal).then(setTables).catch(setTablesError);\r\n    loadPeople();\r\n    return () => abortController.abort();\r\n  }\r\n\r\n  function loadPeople() {\r\n    //Make call to get the reservation and check the number of people in the reservation\r\n    async function getReservation(reservationId) {\r\n      const response = await readReservation(reservationId);\r\n      setPeople(response.people);\r\n      console.log(\"peopleInside\", people);\r\n    }\r\n    getReservation(reservationId);\r\n  }\r\n\r\n  console.log(\"peopleInside2\", people);\r\n\r\n  //Create table rows from the tables state array and use to populate the drop-down\r\n  const tableLinks = tables.map((table) => (\r\n    <option value={table.table_id}>\r\n      {table.table_name} - {table.capacity}\r\n    </option>\r\n  ));\r\n\r\n  //Create the handleSubmit function to seat a party at a table\r\n  //This function changes the status of a reservation to \"seated\" and it\r\n  //changes the reservation_id on the table to match the party's reservation_id\r\n  //so that the table is \"occupied\"\r\n  async function handleSubmit(event) {\r\n    event.preventDefault();\r\n    validate();\r\n\r\n    let table = {\r\n      data: {},\r\n    };\r\n\r\n    table.data.table_id = tableId;\r\n    table.data.reservation_id = reservationId;\r\n    console.log(\"table\", table);\r\n\r\n    async function changeTable(table) {\r\n      const response = await updateTable(table);\r\n      console.log(\"updateTable response\", response);\r\n    }\r\n    await changeTable(table);\r\n\r\n    document.location.href = \"/dashboard\";\r\n  }\r\n\r\n  //The validate function is used by the handleSubmit function to make sure\r\n  //that the table has sufficient capacity and that it is not occupied.\r\n  const validate = () => {\r\n    //Reset visibility\r\n    setVisibility(null);\r\n    setVisibility2(null);\r\n\r\n    console.log(\"logCapacity\", capacity);\r\n    console.log(\"logPeople\", people);\r\n\r\n    if (capacity < people) {\r\n      setVisibility(true);\r\n    }\r\n\r\n    console.log(\"visibilityStatus\", visibility);\r\n\r\n    if (occupied !== null) {\r\n      setVisibility2(true);\r\n    }\r\n  };\r\n\r\n  //Create the handleCancel function to return the user to the reservations page\r\n  const handleCancel = (event) => {\r\n    document.location.href = `/reservations`;\r\n  };\r\n\r\n  //Return the drop-down and the submit button to allow a user to seat a party at a table\r\n  return (\r\n    <main>\r\n      <h1>Seat the Party</h1>\r\n      <br />\r\n      <div class=\"form-group\">\r\n        <label for=\"exampleFormControlSelect1\">Choose Table</label>\r\n        <select\r\n          class=\"form-control\"\r\n          id=\"table_id\"\r\n          name=\"table_id\"\r\n          onChange={handleTableIdChange}\r\n          value={tableId}\r\n        >\r\n          <option value=\"\">--Select an Option--</option>\r\n          {tableLinks}\r\n        </select>\r\n      </div>\r\n      <form onSubmit={handleSubmit}>\r\n        <button type=\"submit\" className=\"btn btn-primary\">\r\n          Submit\r\n        </button>\r\n        <button\r\n          type=\"cancel\"\r\n          className=\"btn btn-primary\"\r\n          onClick={handleCancel}\r\n        >\r\n          Cancel\r\n        </button>\r\n      </form>\r\n      <CapacityError visibility={visibility} />\r\n      <OccupiedError visibility2={visibility2} />\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default Seat;\r\n","C:\\Users\\Todd\\Desktop\\TWhite 2020 Desktop\\Active Projects\\Professional\\CS Bootcamp Project\\Thinkful Bootcamp\\module-52\\starter-restaurant-reservation\\front-end\\src\\reservations\\AddTable.js",["142","143"],"import React, { useEffect, useState } from \"react\";\r\nimport { createTable } from \"../utils/api\";\r\nimport ErrorAlert from \"../layout/ErrorAlert\";\r\n\r\n/**\r\n * Defines the dashboard page.\r\n * @param date\r\n *  the date for which the user wants to view reservations.\r\n * @returns {JSX.Element}\r\n */\r\nfunction AddTable({ date }) {\r\n  //Create tableName and capacity state variables and add event listeners\r\n  const [tableName, setTableName] = useState(\"\");\r\n  const handleTableNameChange = (event) => setTableName(event.target.value);\r\n\r\n  const [capacity, setCapacity] = useState(\"\");\r\n  const handleCapacityChange = (event) => setCapacity(event.target.value);\r\n\r\n  //The handleSubmit function creates a new table and posts it to the db\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    //Create a table object and set its name and capacity according to the\r\n    //input fields\r\n    let table = {\r\n      data: {},\r\n    };\r\n\r\n    table.data.table_name = tableName;\r\n    table.data.capacity = Number(capacity);\r\n\r\n    console.log(\"submit table\", table);\r\n\r\n    //Make an api call to post the new table to the db\r\n    async function newTable(table) {\r\n      const response = await createTable(table);\r\n      if (response) document.location.href = `/dashboard`;\r\n    }\r\n\r\n    newTable(table);\r\n  };\r\n\r\n  //Create the handleCancel function to cancel and return to the homepage\r\n  const handleCancel = (event) => {\r\n    console.log(\"we here\");\r\n    event.preventDefault();\r\n    window.history.back();\r\n  };\r\n\r\n  //Return the html with inputs for entering the tableName and capacity\r\n  return (\r\n    <main>\r\n      <h1>Add a Table</h1>\r\n      <form onSubmit={handleSubmit}>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"table_name\">Table Name</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"table_name\"\r\n            className=\"form-control\"\r\n            id=\"table_name\"\r\n            onChange={handleTableNameChange}\r\n            value={tableName}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"capacity\">Capacity</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"capacity\"\r\n            className=\"form-control\"\r\n            id=\"capacity\"\r\n            onChange={handleCapacityChange}\r\n            value={capacity}\r\n          />\r\n        </div>\r\n        <button type=\"submit\" className=\"btn btn-primary\">\r\n          Submit\r\n        </button>\r\n        <button\r\n          type=\"cancel\"\r\n          className=\"btn btn-primary\"\r\n          onClick={handleCancel}\r\n        >\r\n          Cancel\r\n        </button>\r\n      </form>\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default AddTable;\r\n","C:\\Users\\Todd\\Desktop\\TWhite 2020 Desktop\\Active Projects\\Professional\\CS Bootcamp Project\\Thinkful Bootcamp\\module-52\\starter-restaurant-reservation\\front-end\\src\\reservations\\NewReservation.js",["144","145","146","147","148"],"import React, { useEffect, useState } from \"react\";\r\nimport { createReservation } from \"../utils/api\";\r\nimport { listReservations } from \"../utils/api\";\r\nimport ErrorAlert from \"../layout/ErrorAlert\";\r\nimport { today } from \"../utils/date-time\";\r\nimport PastDateError from \"./PastDateError\";\r\nimport TuesdayError from \"./TuesdayError\";\r\nimport TimeError from \"./TimeError\";\r\n\r\n/**\r\n * Defines the dashboard page.\r\n * @param date\r\n *  the date for which the user wants to view reservations.\r\n * @returns {JSX.Element}\r\n */\r\nfunction NewReservation({ date }) {\r\n  //Create state variables and add event listeners\r\n  const [firstName, setFirstName] = useState(\"\");\r\n  const handleFirstNameChange = (event) => setFirstName(event.target.value);\r\n\r\n  const [lastName, setLastName] = useState(\"\");\r\n  const handleLastNameChange = (event) => setLastName(event.target.value);\r\n\r\n  const [mobileNumber, setMobileNumber] = useState(\"\");\r\n  const handleMobileNumberChange = (event) =>\r\n    setMobileNumber(event.target.value);\r\n\r\n  const [reservationDate, setReservationDate] = useState(\"\");\r\n  const handleReservationDateChange = (event) =>\r\n    setReservationDate(event.target.value);\r\n\r\n  const [reservationTime, setReservationTime] = useState(\"\");\r\n  const handleReservationTimeChange = (event) =>\r\n    setReservationTime(event.target.value);\r\n\r\n  const [people, setPeople] = useState(\"\");\r\n  const handlePeopleChange = (event) => setPeople(event.target.value);\r\n\r\n  //Set visibility for the different types of errors that can occur\r\n  const [visibility, setVisibility] = useState(null);\r\n  const [visibility2, setVisibility2] = useState(null);\r\n  const [visibility3, setVisibility3] = useState(null);\r\n\r\n  //Create switched\r\n  let switched = null;\r\n\r\n  //Create the handleSubmit function which creates a reservation based on the input and\r\n  //makes an api call to add that reservation to the database\r\n  const handleSubmit = (event) => {\r\n    switched = null;\r\n\r\n    validate();\r\n\r\n    event.preventDefault();\r\n    let reservation = {\r\n      data: {},\r\n    };\r\n\r\n    reservation.data.first_name = firstName;\r\n    reservation.data.last_name = lastName;\r\n    reservation.data.mobile_number = mobileNumber;\r\n    reservation.data.reservation_date = reservationDate;\r\n    reservation.data.reservation_time = reservationTime;\r\n    reservation.data.people = people;\r\n    console.log(\"submit reservation\", reservation);\r\n\r\n    async function newReservation(reservation) {\r\n      const response = await createReservation(reservation);\r\n    }\r\n    newReservation(reservation);\r\n\r\n    console.log(\"switched\", switched);\r\n    if (!switched) {\r\n      document.location.href = `/dashboard?date=${reservationDate}`;\r\n    }\r\n  };\r\n\r\n  //The validate function ensures that the reservation is not in the past, on a Tuesday,\r\n  //or before 10:00AM or after 9:30PM\r\n  const validate = () => {\r\n    //Reset visibility\r\n    setVisibility(null);\r\n    setVisibility2(null);\r\n    setVisibility3(null);\r\n\r\n    //Create date for reservation date\r\n    let month = Number(reservationDate.substring(5, 7)) - 1;\r\n    let day = Number(reservationDate.substring(8, 10));\r\n    let year = Number(reservationDate.substring(0, 4));\r\n    let hours = Number(reservationTime.substring(0, 2));\r\n    let minutes = Number(reservationTime.substring(3));\r\n\r\n    let resDate = new Date(year, month, day);\r\n    resDate.setHours(hours);\r\n    resDate.setMinutes(minutes);\r\n\r\n    let today = new Date();\r\n    console.log(\"today\", today);\r\n    console.log(\"resDate\", resDate);\r\n\r\n    if (resDate.valueOf() < today.valueOf()) {\r\n      setVisibility(true);\r\n      switched = true;\r\n    }\r\n\r\n    if (resDate.getDay() === 2) {\r\n      setVisibility2(true);\r\n      switched = true;\r\n    }\r\n\r\n    if (\r\n      resDate.getHours() < 10 ||\r\n      (resDate.getHours() === 10 && resDate.getMinutes() < 30)\r\n    ) {\r\n      setVisibility3(true);\r\n      switched = true;\r\n    }\r\n\r\n    if (\r\n      resDate.getHours() > 21 ||\r\n      (resDate.getHours() === 21 && resDate.getMinutes() > 30)\r\n    ) {\r\n      setVisibility3(true);\r\n      switched = true;\r\n    }\r\n  };\r\n\r\n  //Create the handleCancel function to cancel and return to the homepage1\r\n  const handleCancel = (event) => {\r\n    console.log(\"we here\");\r\n    event.preventDefault();\r\n    document.location.href = \"/dashboard\";\r\n  };\r\n\r\n  //Return the form with inputs to create a new reservation\r\n  return (\r\n    <main>\r\n      <h1>Add a New Reservation</h1>\r\n      <form onSubmit={handleSubmit}>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"first_name\">First Name</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"first_name\"\r\n            className=\"form-control\"\r\n            id=\"first_name\"\r\n            aria-describedby=\"emailHelp\"\r\n            onChange={handleFirstNameChange}\r\n            value={firstName}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"last_name\">Last Name</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"last_name\"\r\n            className=\"form-control\"\r\n            id=\"last_name\"\r\n            onChange={handleLastNameChange}\r\n            value={lastName}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"mobile_number\">Mobile Number</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"mobile_number\"\r\n            className=\"form-control\"\r\n            id=\"mobile_number\"\r\n            onChange={handleMobileNumberChange}\r\n            value={mobileNumber}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"reservation_date\">Date of Reservation</label>\r\n          <input\r\n            type=\"date\"\r\n            name=\"reservation_date\"\r\n            className=\"form-control\"\r\n            id=\"reservation_date\"\r\n            onChange={handleReservationDateChange}\r\n            value={reservationDate}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"reservation_time\">Time of Reservation</label>\r\n          <input\r\n            type=\"time\"\r\n            name=\"reservation_time\"\r\n            className=\"form-control\"\r\n            id=\"reservation_time\"\r\n            onChange={handleReservationTimeChange}\r\n            value={reservationTime}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"people\">People</label>\r\n          <input\r\n            type=\"number\"\r\n            name=\"people\"\r\n            className=\"form-control\"\r\n            id=\"people\"\r\n            onChange={handlePeopleChange}\r\n            value={people}\r\n          />\r\n        </div>\r\n        <button type=\"submit\" className=\"btn btn-primary\">\r\n          Submit\r\n        </button>\r\n        <button\r\n          type=\"cancel\"\r\n          className=\"btn btn-primary\"\r\n          onClick={handleCancel}\r\n        >\r\n          Cancel\r\n        </button>\r\n      </form>\r\n      <PastDateError visibility={visibility} />\r\n      <TuesdayError visibility2={visibility2} />\r\n      <TimeError visibility3={visibility3} />\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default NewReservation;\r\n","C:\\Users\\Todd\\Desktop\\TWhite 2020 Desktop\\Active Projects\\Professional\\CS Bootcamp Project\\Thinkful Bootcamp\\module-52\\starter-restaurant-reservation\\front-end\\src\\reservations\\EditReservation.js",["149","150"],"import React, { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport {\r\n  listReservations,\r\n  readReservation,\r\n  updateReservation,\r\n} from \"../utils/api\";\r\nimport StatusError from \"./StatusError\";\r\nimport ErrorAlert from \"../layout/ErrorAlert\";\r\n\r\n/**\r\n * Defines the dashboard page.\r\n * @param date\r\n *  the date for which the user wants to view reservations.\r\n * @returns {JSX.Element}\r\n */\r\nfunction EditReservation({ date }) {\r\n  //Create name and description state variables and add event listeners\r\n  const [firstName, setFirstName] = useState(\"\");\r\n  const handleFirstNameChange = (event) => setFirstName(event.target.value);\r\n\r\n  const [lastName, setLastName] = useState(\"\");\r\n  const handleLastNameChange = (event) => setLastName(event.target.value);\r\n\r\n  const [mobileNumber, setMobileNumber] = useState(\"\");\r\n  const handleMobileNumberChange = (event) =>\r\n    setMobileNumber(event.target.value);\r\n\r\n  const [reservationDate, setReservationDate] = useState(\"\");\r\n  const handleReservationDateChange = (event) =>\r\n    setReservationDate(event.target.value);\r\n\r\n  const [reservationTime, setReservationTime] = useState(\"\");\r\n  const handleReservationTimeChange = (event) =>\r\n    setReservationTime(event.target.value);\r\n\r\n  const [people, setPeople] = useState(\"\");\r\n  const handlePeopleChange = (event) => setPeople(event.target.value);\r\n\r\n  const [status, setStatus] = useState(\"\");\r\n  const handleStatusChange = (event) => setStatus(event.target.value);\r\n\r\n  const [visibility, setVisibility] = useState(null);\r\n\r\n  //Get ReservationId from url\r\n  const { reservationId } = useParams();\r\n\r\n  //Make an API Call to get the reservation based on the reservation_id\r\n  useEffect(() => {\r\n    async function getReservation(reservationId) {\r\n      const response = await readReservation(reservationId);\r\n\r\n      console.log(\r\n        \"date looks like\",\r\n        response.reservation_date,\r\n        typeof reservation_date\r\n      );\r\n      let dateString = response.reservation_date.substring(0, 10);\r\n\r\n      setFirstName(response.first_name);\r\n      setLastName(response.last_name);\r\n      setMobileNumber(response.mobile_number);\r\n      setReservationDate(dateString);\r\n      setReservationTime(response.reservation_time);\r\n      setPeople(response.people);\r\n      setStatus(response.status);\r\n    }\r\n    getReservation(reservationId);\r\n  }, [reservationId]);\r\n\r\n  //Create the handleSubmit function to update the deck\r\n  //This function creates a reservation based on the user input and then uses changeReservation() api call\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    console.log(\"submit pressed\");\r\n\r\n    if (status !== \"booked\") {\r\n      setVisibility(true);\r\n    } else {\r\n      let reservation = {\r\n        data: {},\r\n      };\r\n\r\n      reservation.data.reservation_id = reservationId;\r\n      reservation.data.first_name = firstName;\r\n      reservation.data.last_name = lastName;\r\n      reservation.data.mobile_number = mobileNumber;\r\n      reservation.data.reservation_date = reservationDate;\r\n      reservation.data.reservation_time = reservationTime;\r\n      reservation.data.people = people;\r\n      reservation.data.status = status;\r\n      console.log(\"submit reservation\", reservation);\r\n\r\n      async function changeReservation(reservation) {\r\n        const response = await updateReservation(reservation);\r\n        console.log(response);\r\n      }\r\n      changeReservation(reservation);\r\n\r\n      setFirstName(\"\");\r\n      setLastName(\"\");\r\n      setMobileNumber(\"\");\r\n      setReservationDate(\"\");\r\n      setReservationTime(\"\");\r\n      setPeople(\"\");\r\n      setStatus(\"\");\r\n\r\n      //document.location.href = \"/\";\r\n    }\r\n  };\r\n\r\n  //Create the handleCancel function to return the user to the deck page\r\n  const handleCancel = (event) => {\r\n    window.history.back();\r\n  };\r\n\r\n  //Return the form to enter the reservation details\r\n  return (\r\n    <main>\r\n      <h1>Edit Reservation</h1>\r\n      <form onSubmit={handleSubmit}>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"first_name\">First Name</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"first_name\"\r\n            className=\"form-control\"\r\n            id=\"first_name\"\r\n            aria-describedby=\"emailHelp\"\r\n            onChange={handleFirstNameChange}\r\n            value={firstName}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"last_name\">Last Name</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"last_name\"\r\n            className=\"form-control\"\r\n            id=\"last_name\"\r\n            onChange={handleLastNameChange}\r\n            value={lastName}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"mobile_number\">Mobile Number</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"mobile_number\"\r\n            className=\"form-control\"\r\n            id=\"mobile_number\"\r\n            onChange={handleMobileNumberChange}\r\n            value={mobileNumber}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"reservation_date\">Date of Reservation</label>\r\n          <input\r\n            type=\"date\"\r\n            name=\"reservation_date\"\r\n            className=\"form-control\"\r\n            id=\"reservation_date\"\r\n            onChange={handleReservationDateChange}\r\n            value={reservationDate}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"reservation_time\">Time of Reservation</label>\r\n          <input\r\n            type=\"time\"\r\n            name=\"reservation_time\"\r\n            className=\"form-control\"\r\n            id=\"reservation_time\"\r\n            onChange={handleReservationTimeChange}\r\n            value={reservationTime}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"people\">People</label>\r\n          <input\r\n            type=\"number\"\r\n            name=\"people\"\r\n            className=\"form-control\"\r\n            id=\"people\"\r\n            onChange={handlePeopleChange}\r\n            value={people}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"status\">Status</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"status\"\r\n            className=\"form-control\"\r\n            id=\"status\"\r\n            onChange={handleStatusChange}\r\n            value={status}\r\n          />\r\n        </div>\r\n        <button type=\"submit\" className=\"btn btn-primary\">\r\n          Submit\r\n        </button>\r\n        <button\r\n          type=\"cancel\"\r\n          className=\"btn btn-primary\"\r\n          onClick={handleCancel}\r\n        >\r\n          Cancel\r\n        </button>\r\n      </form>\r\n      <StatusError visibility={visibility} />\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default EditReservation;\r\n","C:\\Users\\Todd\\Desktop\\TWhite 2020 Desktop\\Active Projects\\Professional\\CS Bootcamp Project\\Thinkful Bootcamp\\module-52\\starter-restaurant-reservation\\front-end\\src\\reservations\\Search.js",["151","152","153","154"],"import React, { useEffect, useState } from \"react\";\r\nimport SearchResults from \"./SearchResults\";\r\nimport { createTable } from \"../utils/api\";\r\nimport ErrorAlert from \"../layout/ErrorAlert\";\r\n\r\n/**\r\n * Defines the dashboard page.\r\n * @param date\r\n *  the date for which the user wants to view reservations.\r\n * @returns {JSX.Element}\r\n */\r\nfunction Search({ date }) {\r\n  //Create the phone nubmer state variable and add event listeners\r\n  const [phoneNumber, setPhoneNumber] = useState(\"\");\r\n  const handlePhoneNumberChange = (event) => setPhoneNumber(event.target.value);\r\n\r\n  const [visibilityStatus, setVisibilityStatus] = useState(null);\r\n\r\n  //The handleSubmit function merely shows the search results\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    setVisibilityStatus(true);\r\n    console.log(\"phoneNumber\", phoneNumber);\r\n  };\r\n\r\n  //Create the handleCancel function to cancel and return to the homepage1\r\n  const handleCancel = (event) => {\r\n    console.log(\"we here\");\r\n    event.preventDefault();\r\n  };\r\n\r\n  //Return the form to enter the phone number and show the results\r\n  return (\r\n    <main>\r\n      <h1>Find Reservations</h1>\r\n      <form onSubmit={handleSubmit}>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"mobile_number\">Enter a Customer Phone Number</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"mobile_number\"\r\n            className=\"form-control\"\r\n            id=\"mobile_number\"\r\n            onChange={handlePhoneNumberChange}\r\n            value={phoneNumber}\r\n          />\r\n        </div>\r\n\r\n        <button type=\"submit\" className=\"btn btn-primary\">\r\n          Find\r\n        </button>\r\n      </form>\r\n      <div>\r\n        <SearchResults\r\n          visibility={visibilityStatus}\r\n          phoneNumber={phoneNumber}\r\n        />\r\n      </div>\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default Search;\r\n","C:\\Users\\Todd\\Desktop\\TWhite 2020 Desktop\\Active Projects\\Professional\\CS Bootcamp Project\\Thinkful Bootcamp\\module-52\\starter-restaurant-reservation\\front-end\\src\\reservations\\SearchResults.js",["155","156"],"//The SearchResults component is used to show the results from the search for reservations by phone number\r\n//It is used on the Search component\r\n\r\nimport React, { useEffect, useState } from \"react\";\r\n\r\nimport { listReservations } from \"../utils/api\";\r\n\r\nfunction SearchResults({ visibility, phoneNumber }) {\r\n  //UseEffect is used to get the reservations\r\n  useEffect(loadDashboard, [phoneNumber]);\r\n  const [reservations, setReservations] = useState([]);\r\n  const [reservationsError, setReservationsError] = useState(null);\r\n\r\n  //Load all of the reservations filtered by phone number\r\n  function loadDashboard() {\r\n    const abortController = new AbortController();\r\n    setReservationsError(null);\r\n    const mobile_number = phoneNumber;\r\n    console.log(\"mobile_number before api\", mobile_number);\r\n    listReservations({ mobile_number }, abortController.signal)\r\n      .then(setReservations)\r\n      .catch(setReservationsError);\r\n    console.log(\"reservationsFound\", reservations);\r\n    return () => abortController.abort();\r\n  }\r\n\r\n  //Create table rows of the reservations to display in the search results\r\n  //Use the reservations state array to create the arrows.\r\n  const reservationLinks = reservations.map((reservation) => (\r\n    <tr>\r\n      <td>{reservation.first_name}</td>\r\n      <td>{reservation.last_name}</td>\r\n      <td>{reservation.mobile_number}</td>\r\n      <td>{reservation.reservation_date}</td>\r\n      <td>{reservation.reservation_time}</td>\r\n      <td>{reservation.people}</td>\r\n    </tr>\r\n  ));\r\n\r\n  if (visibility !== null) {\r\n    if (reservations.length === 0) {\r\n      return (\r\n        <div>\r\n          <h1>No reservations found</h1>\r\n        </div>\r\n      );\r\n    } else {\r\n      //Return the results as a table\r\n      return (\r\n        <div>\r\n          <h1>Reservations Found for {phoneNumber}</h1>\r\n          <table>\r\n            <th>First Name</th>\r\n            <th>Last Name</th>\r\n            <th>Mobile Number</th>\r\n            <th>Reservation Date</th>\r\n            <th>Reservation Time</th>\r\n            <th>People</th>\r\n            {reservationLinks}\r\n          </table>\r\n        </div>\r\n      );\r\n    }\r\n  } else {\r\n    return null;\r\n  }\r\n}\r\n\r\nexport default SearchResults;\r\n","C:\\Users\\Todd\\Desktop\\TWhite 2020 Desktop\\Active Projects\\Professional\\CS Bootcamp Project\\Thinkful Bootcamp\\module-52\\starter-restaurant-reservation\\front-end\\src\\dashboard\\SeatButton.js",["157","158"],"//The Seat Button is used to seat a reservation\r\n//The button will appear next to a reservation on the Dashboard\r\n//The two props are visibility and reservationId\r\n\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction SeatButton({ visibility, reservationId }) {\r\n  console.log(\"value of visibility\", visibility);\r\n  if (visibility !== null) {\r\n    return (\r\n      <td>\r\n        <Link to={`/reservations/${reservationId}/seat`}>\r\n          <button type=\"button\" class=\"btn btn-outline-primary\">\r\n            Seat\r\n          </button>\r\n        </Link>{\" \"}\r\n      </td>\r\n    );\r\n  } else {\r\n    return null;\r\n  }\r\n}\r\n\r\nexport default SeatButton;\r\n","C:\\Users\\Todd\\Desktop\\TWhite 2020 Desktop\\Active Projects\\Professional\\CS Bootcamp Project\\Thinkful Bootcamp\\module-52\\starter-restaurant-reservation\\front-end\\src\\dashboard\\FinishButton.js",["159","160"],"//The Finish Button is used to finish a party's time at a table\r\n//The button will appear next to a table on the Dashboard\r\n//The four props are visibility, handleFinish, the reservationId, and the tableId\r\n\r\nimport React, { useEffect, useState } from \"react\";\r\n\r\nfunction FinishButton({ visibility, handleFinish, reservationId, tableId }) {\r\n  console.log(\"value of visibility\", visibility);\r\n  const sendAlert = (event) => {\r\n    event.preventDefault();\r\n\r\n    //Give an alert asking if they truly want to finish the table\r\n    if (\r\n      window.confirm(\r\n        \"Is this table ready to seat new guests? This cannot be undone.\"\r\n      )\r\n    ) {\r\n      handleFinish(reservationId, tableId);\r\n    } else {\r\n      document.location.href = \"/dashboard\";\r\n    }\r\n  };\r\n\r\n  return (\r\n    <td>\r\n      <button\r\n        type=\"button\"\r\n        class=\"btn btn-outline-primary\"\r\n        onClick={sendAlert}\r\n        data-table-id-finish={tableId}\r\n      >\r\n        Finish\r\n      </button>\r\n    </td>\r\n  );\r\n}\r\n\r\nexport default FinishButton;\r\n","C:\\Users\\Todd\\Desktop\\TWhite 2020 Desktop\\Active Projects\\Professional\\CS Bootcamp Project\\Thinkful Bootcamp\\module-52\\starter-restaurant-reservation\\front-end\\src\\dashboard\\CancelButton.js",["161","162"],"//The Cancel Button is used to cancel a reservation\r\n//The button will appear next to a reservation on the Dashboard\r\n//The three props are visibility, handleCancel, and the reservationId\r\n\r\nimport React, { useEffect, useState } from \"react\";\r\n\r\nfunction CancelButton({ visibility, handleCancel, reservationId }) {\r\n  const sendAlert = (event) => {\r\n    event.preventDefault();\r\n\r\n    //Give an alert asking if they truly want to cancel the reservation\r\n    if (\r\n      window.confirm(\r\n        \"Do you want to cancel this reservation? This cannot be undone.\"\r\n      )\r\n    ) {\r\n      handleCancel(reservationId);\r\n    } else {\r\n      document.location.href = \"/dashboard\";\r\n    }\r\n  };\r\n  console.log(\"value of visibility\", visibility);\r\n  if (visibility !== null) {\r\n    return (\r\n      <td>\r\n        <button\r\n          type=\"button\"\r\n          class=\"btn btn-outline-primary\"\r\n          onClick={sendAlert}\r\n          data-reservation-id-cancel={reservationId}\r\n        >\r\n          Cancel\r\n        </button>\r\n      </td>\r\n    );\r\n  } else {\r\n    return null;\r\n  }\r\n}\r\n\r\nexport default CancelButton;\r\n","C:\\Users\\Todd\\Desktop\\TWhite 2020 Desktop\\Active Projects\\Professional\\CS Bootcamp Project\\Thinkful Bootcamp\\module-52\\starter-restaurant-reservation\\front-end\\src\\reservations\\PastDateError.js",["163","164"],"//The PastDateError is used when the the user tries to enter a reservation on a date in the past\r\n//The PastDateError on the NewReservation Component\r\n//The sole prop is visibility\r\n\r\nimport React, { useEffect, useState } from \"react\";\r\n\r\nfunction PastDateError({ visibility }) {\r\n  if (visibility !== null) {\r\n    return (\r\n      <div class=\"alert alert-danger\" role=\"alert\">\r\n        The reservation date must not be a past date!\r\n      </div>\r\n    );\r\n  } else {\r\n    return null;\r\n  }\r\n}\r\n\r\nexport default PastDateError;\r\n","C:\\Users\\Todd\\Desktop\\TWhite 2020 Desktop\\Active Projects\\Professional\\CS Bootcamp Project\\Thinkful Bootcamp\\module-52\\starter-restaurant-reservation\\front-end\\src\\reservations\\TuesdayError.js",["165","166"],"//The TuesdayError is used when the the user tries enter a reservation on a Tuesday\r\n//The TuesdayError appears on the NewReservation Component\r\n//The sole prop is visibility2\r\n\r\nimport React, { useEffect, useState } from \"react\";\r\n\r\nfunction TuesdayError({ visibility2 }) {\r\n  if (visibility2 !== null) {\r\n    return (\r\n      <div class=\"alert alert-danger\" role=\"alert\">\r\n        Reservations cannot be made on Tuesdays!\r\n      </div>\r\n    );\r\n  } else {\r\n    return null;\r\n  }\r\n}\r\n\r\nexport default TuesdayError;\r\n","C:\\Users\\Todd\\Desktop\\TWhite 2020 Desktop\\Active Projects\\Professional\\CS Bootcamp Project\\Thinkful Bootcamp\\module-52\\starter-restaurant-reservation\\front-end\\src\\reservations\\OccupiedError.js",["167","168"],"//The OccupiedError is used when the the user tries to seat a party at an occupied table\r\n//The Error appears on the Seat Component\r\n//The sole prop is visibility2\r\n\r\nimport React, { useEffect, useState } from \"react\";\r\n\r\nfunction OccupiedError({ visibility2 }) {\r\n  if (visibility2 !== null) {\r\n    return (\r\n      <div class=\"alert alert-danger\" role=\"alert\">\r\n        The table selected is occupied.\r\n      </div>\r\n    );\r\n  } else {\r\n    return null;\r\n  }\r\n}\r\n\r\nexport default OccupiedError;\r\n","C:\\Users\\Todd\\Desktop\\TWhite 2020 Desktop\\Active Projects\\Professional\\CS Bootcamp Project\\Thinkful Bootcamp\\module-52\\starter-restaurant-reservation\\front-end\\src\\reservations\\CapacityError.js",["169","170"],"//The CapacityError is used to notify that the capacity is less than the party\r\n//The only prop is visibility\r\n\r\nimport React, { useEffect, useState } from \"react\";\r\n\r\nfunction CapacityError({ visibility }) {\r\n  if (visibility !== null) {\r\n    return (\r\n      <div class=\"alert alert-danger\" role=\"alert\">\r\n        The table must have sufficient capacity to seat the party.\r\n      </div>\r\n    );\r\n  } else {\r\n    return null;\r\n  }\r\n}\r\n\r\nexport default CapacityError;\r\n","C:\\Users\\Todd\\Desktop\\TWhite 2020 Desktop\\Active Projects\\Professional\\CS Bootcamp Project\\Thinkful Bootcamp\\module-52\\starter-restaurant-reservation\\front-end\\src\\reservations\\TimeError.js",["171","172"],"//The TimeError is used when the the user tries enter a reservation during an invalid time\r\n//The TimeError appears on the NewReservation Component\r\n//The sole prop is visibility3\r\n\r\nimport React, { useEffect, useState } from \"react\";\r\n\r\nfunction TimeError({ visibility3 }) {\r\n  if (visibility3 !== null) {\r\n    return (\r\n      <div class=\"alert alert-danger\" role=\"alert\">\r\n        The reservation time cannot be before 10:30AM or after 9:30PM.\r\n      </div>\r\n    );\r\n  } else {\r\n    return null;\r\n  }\r\n}\r\n\r\nexport default TimeError;\r\n","C:\\Users\\Todd\\Desktop\\TWhite 2020 Desktop\\Active Projects\\Professional\\CS Bootcamp Project\\Thinkful Bootcamp\\module-52\\starter-restaurant-reservation\\front-end\\src\\reservations\\StatusError.js",["173","174"],"//The StatusError is used when the the user tries to edit a reservation that does not have a status of \"booked\"\r\n//The Error appears on the Dashboard Component next to the reservation\r\n//The sole prop is visibility\r\n\r\nimport React, { useEffect, useState } from \"react\";\r\n\r\nfunction StatusError({ visibility }) {\r\n  if (visibility !== null) {\r\n    return (\r\n      <div class=\"alert alert-danger\" role=\"alert\">\r\n        Only reservations with a status of \"booked\" can be edited.\r\n      </div>\r\n    );\r\n  } else {\r\n    return null;\r\n  }\r\n}\r\n\r\nexport default StatusError;\r\n",{"ruleId":"175","replacedBy":"176"},{"ruleId":"177","replacedBy":"178"},{"ruleId":"179","severity":1,"message":"180","line":6,"column":16,"nodeType":"181","messageId":"182","endLine":6,"endColumn":25},{"ruleId":"179","severity":1,"message":"183","line":9,"column":3,"nodeType":"181","messageId":"182","endLine":9,"endColumn":20},{"ruleId":"179","severity":1,"message":"184","line":17,"column":8,"nodeType":"181","messageId":"182","endLine":17,"endColumn":18},{"ruleId":"179","severity":1,"message":"185","line":30,"column":10,"nodeType":"181","messageId":"182","endLine":30,"endColumn":27},{"ruleId":"179","severity":1,"message":"186","line":32,"column":10,"nodeType":"181","messageId":"182","endLine":32,"endColumn":21},{"ruleId":"187","severity":1,"message":"188","line":37,"column":3,"nodeType":"189","messageId":"190","endLine":41,"endColumn":4},{"ruleId":"191","severity":2,"message":"192","line":133,"column":5,"nodeType":"181","messageId":"193","endLine":133,"endColumn":13},{"ruleId":"179","severity":1,"message":"184","line":3,"column":8,"nodeType":"181","messageId":"182","endLine":3,"endColumn":18},{"ruleId":"179","severity":1,"message":"185","line":13,"column":10,"nodeType":"181","messageId":"182","endLine":13,"endColumn":27},{"ruleId":"179","severity":1,"message":"194","line":6,"column":3,"nodeType":"181","messageId":"182","endLine":6,"endColumn":31},{"ruleId":"179","severity":1,"message":"184","line":12,"column":8,"nodeType":"181","messageId":"182","endLine":12,"endColumn":18},{"ruleId":"179","severity":1,"message":"186","line":25,"column":10,"nodeType":"181","messageId":"182","endLine":25,"endColumn":21},{"ruleId":"195","severity":1,"message":"196","line":51,"column":25,"nodeType":"197","endLine":51,"endColumn":31,"suggestions":"198"},{"ruleId":"179","severity":1,"message":"199","line":1,"column":17,"nodeType":"181","messageId":"182","endLine":1,"endColumn":26},{"ruleId":"179","severity":1,"message":"184","line":3,"column":8,"nodeType":"181","messageId":"182","endLine":3,"endColumn":18},{"ruleId":"179","severity":1,"message":"199","line":1,"column":17,"nodeType":"181","messageId":"182","endLine":1,"endColumn":26},{"ruleId":"179","severity":1,"message":"200","line":3,"column":10,"nodeType":"181","messageId":"182","endLine":3,"endColumn":26},{"ruleId":"179","severity":1,"message":"184","line":4,"column":8,"nodeType":"181","messageId":"182","endLine":4,"endColumn":18},{"ruleId":"179","severity":1,"message":"201","line":5,"column":10,"nodeType":"181","messageId":"182","endLine":5,"endColumn":15},{"ruleId":"179","severity":1,"message":"202","line":68,"column":13,"nodeType":"181","messageId":"182","endLine":68,"endColumn":21},{"ruleId":"179","severity":1,"message":"200","line":4,"column":3,"nodeType":"181","messageId":"182","endLine":4,"endColumn":19},{"ruleId":"179","severity":1,"message":"184","line":9,"column":8,"nodeType":"181","messageId":"182","endLine":9,"endColumn":18},{"ruleId":"179","severity":1,"message":"199","line":1,"column":17,"nodeType":"181","messageId":"182","endLine":1,"endColumn":26},{"ruleId":"179","severity":1,"message":"203","line":3,"column":10,"nodeType":"181","messageId":"182","endLine":3,"endColumn":21},{"ruleId":"179","severity":1,"message":"184","line":4,"column":8,"nodeType":"181","messageId":"182","endLine":4,"endColumn":18},{"ruleId":"179","severity":1,"message":"204","line":27,"column":9,"nodeType":"181","messageId":"182","endLine":27,"endColumn":21},{"ruleId":"195","severity":1,"message":"205","line":10,"column":28,"nodeType":"197","endLine":10,"endColumn":41,"suggestions":"206"},{"ruleId":"179","severity":1,"message":"185","line":12,"column":10,"nodeType":"181","messageId":"182","endLine":12,"endColumn":27},{"ruleId":"179","severity":1,"message":"199","line":5,"column":17,"nodeType":"181","messageId":"182","endLine":5,"endColumn":26},{"ruleId":"179","severity":1,"message":"207","line":5,"column":28,"nodeType":"181","messageId":"182","endLine":5,"endColumn":36},{"ruleId":"179","severity":1,"message":"199","line":5,"column":17,"nodeType":"181","messageId":"182","endLine":5,"endColumn":26},{"ruleId":"179","severity":1,"message":"207","line":5,"column":28,"nodeType":"181","messageId":"182","endLine":5,"endColumn":36},{"ruleId":"179","severity":1,"message":"199","line":5,"column":17,"nodeType":"181","messageId":"182","endLine":5,"endColumn":26},{"ruleId":"179","severity":1,"message":"207","line":5,"column":28,"nodeType":"181","messageId":"182","endLine":5,"endColumn":36},{"ruleId":"179","severity":1,"message":"199","line":5,"column":17,"nodeType":"181","messageId":"182","endLine":5,"endColumn":26},{"ruleId":"179","severity":1,"message":"207","line":5,"column":28,"nodeType":"181","messageId":"182","endLine":5,"endColumn":36},{"ruleId":"179","severity":1,"message":"199","line":5,"column":17,"nodeType":"181","messageId":"182","endLine":5,"endColumn":26},{"ruleId":"179","severity":1,"message":"207","line":5,"column":28,"nodeType":"181","messageId":"182","endLine":5,"endColumn":36},{"ruleId":"179","severity":1,"message":"199","line":5,"column":17,"nodeType":"181","messageId":"182","endLine":5,"endColumn":26},{"ruleId":"179","severity":1,"message":"207","line":5,"column":28,"nodeType":"181","messageId":"182","endLine":5,"endColumn":36},{"ruleId":"179","severity":1,"message":"199","line":4,"column":17,"nodeType":"181","messageId":"182","endLine":4,"endColumn":26},{"ruleId":"179","severity":1,"message":"207","line":4,"column":28,"nodeType":"181","messageId":"182","endLine":4,"endColumn":36},{"ruleId":"179","severity":1,"message":"199","line":5,"column":17,"nodeType":"181","messageId":"182","endLine":5,"endColumn":26},{"ruleId":"179","severity":1,"message":"207","line":5,"column":28,"nodeType":"181","messageId":"182","endLine":5,"endColumn":36},{"ruleId":"179","severity":1,"message":"199","line":5,"column":17,"nodeType":"181","messageId":"182","endLine":5,"endColumn":26},{"ruleId":"179","severity":1,"message":"207","line":5,"column":28,"nodeType":"181","messageId":"182","endLine":5,"endColumn":36},"no-native-reassign",["208"],"no-negated-in-lhs",["209"],"no-unused-vars","'useParams' is defined but never used.","Identifier","unusedVar","'updateReservation' is defined but never used.","'ErrorAlert' is defined but never used.","'reservationsError' is assigned a value but never used.","'tablesError' is assigned a value but never used.","no-extend-native","Date prototype is read only, properties should not be added.","AssignmentExpression","unexpected","no-restricted-globals","Unexpected use of 'location'.","defaultMessage","'updateReservationWithTableId' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'loadPeople'. Either include it or remove the dependency array.","ArrayExpression",["210"],"'useEffect' is defined but never used.","'listReservations' is defined but never used.","'today' is defined but never used.","'response' is assigned a value but never used.","'createTable' is defined but never used.","'handleCancel' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'reservations'. Either include it or remove the dependency array.",["211"],"'useState' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"212","fix":"213"},{"desc":"214","fix":"215"},"Update the dependencies array to be: [date, loadPeople]",{"range":"216","text":"217"},"Update the dependencies array to be: [phoneNumber, reservations]",{"range":"218","text":"219"},[1727,1733],"[date, loadPeople]",[384,397],"[phoneNumber, reservations]"]